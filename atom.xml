<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Trent&#x27;s 2&lt;sup&gt;nd&lt;&#x2F;sup&gt; &lt;span class=&#x27;hvr-pulse&#x27;&gt;🧠&lt;&#x2F;span&gt;, curtosey of Peter</title>
	<link href="https://obsidian-zola.trwbox.com/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://obsidian-zola.trwbox.com/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-08-02T02:41:06.403252+00:00</updated>
	<id>https://obsidian-zola.trwbox.com/atom.xml</id>
	<entry xml:lang="en">
		<title>Gear And Belt Generators</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/3d-printing/3d-models/gear-and-belt-generators/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/3d-printing/3d-models/gear-and-belt-generators/</id>
		<content type="html">&lt;p&gt;Just change model teeth number in &amp;quot;Parameters&amp;quot;. Remember to only go from low teeth count to high teeth count, doing the reverse might cause errors. E.g. if you changed teeth count to 57 and decided on 42 after a while, start from the original 10 teeth model again instead of your 57 teeth model.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gt2&quot;&gt;GT2&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gear&quot;&gt;Gear&lt;&#x2F;h3&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c539cbddf2a140d28f53?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h3 id=&quot;slot&quot;&gt;Slot&lt;&#x2F;h3&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c5398778eaac7112b15d?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;htd-3m&quot;&gt;HTD-3M&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gear-1&quot;&gt;Gear&lt;&#x2F;h3&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c539c9223bb7d1cfaf38?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h3 id=&quot;slot-1&quot;&gt;Slot&lt;&#x2F;h3&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c539486b372ae90fef8e?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h3 id=&quot;harmonic-gear-box&quot;&gt;Harmonic Gear Box&lt;&#x2F;h3&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c539df81a1f536793d7c?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Motors</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/3d-printing/3d-models/motors/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/3d-printing/3d-models/motors/</id>
		<content type="html">&lt;h2 id=&quot;28byj-48-stepper-motor&quot;&gt;28BYJ-48 Stepper Motor&lt;&#x2F;h2&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c5395d56f049e8fd5d84?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;nema-8-20x20mm-stepper-motor&quot;&gt;NEMA 8 20x20mm Stepper Motor&lt;&#x2F;h2&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c53981916ba991b284b1?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;nema-17-42x42mm-stepper-motor&quot;&gt;NEMA 17 42x42mm Stepper Motor&lt;&#x2F;h2&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;myhub.autodesk360.com&#x2F;ue2d5e1af&#x2F;shares&#x2F;public&#x2F;SH9285eQTcf875d3c539e34e55ece07fab63?mode=embed&quot; width=&quot;640&quot; height=&quot;480&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;  frameborder=&quot;0&quot;&gt;&lt;&#x2F;iframe&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Prusa Mini Customization</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/3d-printing/3d-models/prusa-mini-customization/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/3d-printing/3d-models/prusa-mini-customization/</id>
		<content type="html">&lt;p&gt;My own Prusa Mini customized rendering based on STEP model from GrabCAD
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;prusa-mini-assembly-v18.png&quot; alt=&quot;Prusa Mini Assembly v18.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Cool Filaments</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/3d-printing/cool-filaments/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/3d-printing/cool-filaments/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.herz-filament.at&#x2F;en&#x2F;44-petg&quot;&gt;Silk Metallic PETG&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Klipper On MPMD V1</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/3d-printing/firmware/klipper-on-mpmd-v1/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/3d-printing/firmware/klipper-on-mpmd-v1/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;SWD connection on stock &#x2F; silent board&lt;&#x2F;li&gt;
&lt;li&gt;GG bootloader 
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;arkorobotics&#x2F;MiniDeltaBootloader&lt;&#x2F;li&gt;
&lt;li&gt;Combine Hex from 0x08000000 to 0x08002000 + Firmware from 0x08002000 onwards using J-Flash&lt;&#x2F;li&gt;
&lt;li&gt;then flash using platformIO jlink + SWD&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;J-link clone flashing binary:
&lt;ul&gt;
&lt;li&gt;J-Flash + PlatformIO&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Klipper Setup
&lt;ul&gt;
&lt;li&gt;STM32F070&lt;&#x2F;li&gt;
&lt;li&gt;8kb&lt;&#x2F;li&gt;
&lt;li&gt;USB connection&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Example Config
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;Klipper3d&#x2F;klipper&#x2F;blob&#x2F;master&#x2F;config&#x2F;printer-monoprice-mini-delta-2017.cfg&lt;&#x2F;li&gt;
&lt;li&gt;Change radius to 55&lt;&#x2F;li&gt;
&lt;li&gt;mcirosteps to 32 for silent board&lt;&#x2F;li&gt;
&lt;li&gt;z-offset&lt;&#x2F;li&gt;
&lt;li&gt;virtual_sdcard: ~&#x2F;gcode_files&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Octoprint</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/3d-printing/firmware/octoprint/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/3d-printing/firmware/octoprint/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;daumemo.com&#x2F;installing-octoprint-on-orangepi-zero-part-1&#x2F;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>File System</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/operating-system/file-system/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/operating-system/file-system/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;forums.tomshardware.com&#x2F;threads&#x2F;ntfs-fat32-mbr-gpt-what-is-the-difference.1878188&#x2F;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Hacks And Workarounds (Outsmarting Rogue Companies)</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/hacks-and-workarounds-outsmarting-rogue-companies/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/hacks-and-workarounds-outsmarting-rogue-companies/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;oneleaf.icu&#x2F;&quot;&gt;Baidu Pan Download&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;libgen.is&#x2F;&quot;&gt;PDF&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Misc</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/misc/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/misc/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;biorender.com&#x2F;&quot;&gt;Cool Bio Illustrations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Powerpoint</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/powerpoint/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/powerpoint/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;app.haikei.app&#x2F;&quot;&gt;Pattern Generator&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Reseach</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/reseach/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/reseach/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.connectedpapers.com&#x2F;&quot;&gt;Connected Papers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Software Development</title>
		<published>2022-08-02T02:41:06.403252+00:00</published>
		<updated>2022-08-02T02:41:06.403252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/software-development/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/useful-online-tools-and-resources/software-development/</id>
		<content type="html">&lt;h1 id=&quot;documentation&quot;&gt;Documentation&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;readme.com&#x2F;&quot;&gt;ReadMe for APIs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.mkdocs.org&#x2F;&quot;&gt;MkDocs for Python and pre-executed Jupyter&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;notebook-or-environment-sharing&quot;&gt;Notebook or Environment Sharing&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nextjournal.com&#x2F;&quot;&gt;NextJournal&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.paperspace.com&#x2F;&quot;&gt;Paperspace Gradient&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.kaggle.com&#x2F;&quot;&gt;Kaggle&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.nbinteract.com&#x2F;&quot;&gt;Binder or nbinteract&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;machine-learning&quot;&gt;Machine Learning&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wandb.ai&quot;&gt;Weights and Biases&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;traffic-monitoring&quot;&gt;Traffic Monitoring&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;yhype.me&#x2F;github&#x2F;accounts&#x2F;ppeetteerrs&quot;&gt;YHype to keep track of GitHub traffics more than 14 days&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>README</title>
		<published>2022-08-02T02:41:06.399252+00:00</published>
		<updated>2022-08-02T02:41:06.399252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/readme/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/readme/</id>
		<content type="html">&lt;p&gt;This is not my vault or my set of notes. I do not guarantee anything inside them. This is a testing copy of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ppeetteerrs&#x2F;obsidian-pkm&quot;&gt;ppeetteerrs&#x27; test obsidian vault&lt;&#x2F;a&gt;. This is solely for testing of my github pages build action against a known netlify build, and being able to compare.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Saving PulseSecure Password In Microsoft Windows</title>
		<published>2022-08-02T02:41:06.399252+00:00</published>
		<updated>2022-08-02T02:41:06.399252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/saving-pulsesecure-password-in-microsoft-windows/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/saving-pulsesecure-password-in-microsoft-windows/</id>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;I am a lazy person. And I am annoyed that PulseSecure cannot save my VPN credentials. So I decided to force it to do so.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: this hack only applies to people who are willing to store their VPN passwords in plain text&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Create a Windows shortcut (by copying an existing shortcut or creating a new one, doesn&#x27;t matter)&lt;&#x2F;li&gt;
&lt;li&gt;Open the shortcut&#x27;s &lt;code&gt;Properties&lt;&#x2F;code&gt; pane&lt;&#x2F;li&gt;
&lt;li&gt;Set the &lt;code&gt;Target&lt;&#x2F;code&gt; as &lt;code&gt;&amp;quot;C:\Program Files (x86)\Common Files\Pulse Secure\Integration\pulselauncher.exe&amp;quot; -url &amp;lt;VPN_URL&amp;gt; -u &amp;lt;username&amp;gt; -p &amp;lt;password&amp;gt; -r &amp;lt;realm&#x2F;domain&amp;gt;&lt;&#x2F;code&gt; (replace the placeholders)&lt;&#x2F;li&gt;
&lt;li&gt;Set &lt;code&gt;Start in&lt;&#x2F;code&gt; as &lt;code&gt;&amp;quot;C:\Program Files (x86)\Common Files\Pulse Secure\Integration&amp;quot;&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Give it a fancy icon using &lt;code&gt;Change Icon&lt;&#x2F;code&gt;, or use mine
&lt;a href=&quot;&#x2F;docs&#x2F;attachments&#x2F;pulse-secure-shortcut-icon.ico&quot;&gt;pulse_secure_shortcut_icon.ico&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Pin it to your Taskbar if you want to!&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Home</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/home/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/home/</id>
		<content type="html">&lt;p&gt;This is a test of the automatic rebuilding of the site!!!!&lt;&#x2F;p&gt;
&lt;p&gt;This is an additional upadte to test autobuild with github tokens&lt;&#x2F;p&gt;
&lt;p&gt;Click anything on the sidebar :)&lt;&#x2F;p&gt;
&lt;p&gt;Cool Stuff to look out for:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;NuShell&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Google Chrome And Google Search Hacks</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/google-chrome-and-google-search-hacks/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/google-chrome-and-google-search-hacks/</id>
		<content type="html">&lt;h2 id=&quot;search-database-for-resources-e-g-book-pdf&quot;&gt;Search Database for Resources (e.g. Book PDF)&lt;&#x2F;h2&gt;
&lt;p&gt;Substitute &lt;code&gt;&amp;lt;resource&amp;gt;&lt;&#x2F;code&gt; with your resource name:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;-inurl:htm -inurl:html intitle:&amp;quot;index of&amp;quot; +(chm|pdf|zip) +&amp;quot; *&amp;lt;resource&amp;gt;* &amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Make Conda Great (Less Suckish) Again</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/make-conda-great-less-suckish-again/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/make-conda-great-less-suckish-again/</id>
		<content type="html">&lt;h2 id=&quot;install-mambaforge&quot;&gt;Install &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;conda-forge&#x2F;miniforge&quot;&gt;mambaforge&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;mamba&lt;&#x2F;code&gt; = &lt;code&gt;conda&lt;&#x2F;code&gt; in C = infinitely faster = don&#x27;t use &lt;code&gt;conda&lt;&#x2F;code&gt; ever again, please.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wget &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;conda-forge&#x2F;miniforge&#x2F;releases&#x2F;latest&#x2F;download&#x2F;Mambaforge-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;).sh&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bash&lt;&#x2F;span&gt;&lt;span&gt; Mambaforge-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span&gt;)-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span&gt;).sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rm&lt;&#x2F;span&gt;&lt;span&gt; Mambaforge-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span&gt;)-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span&gt;).sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;install-pytorch-from-mirror&quot;&gt;Install Pytorch from &lt;a href=&quot;https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;1627527&quot;&gt;Mirror&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Somethings, the default &lt;code&gt;pytorch&lt;&#x2F;code&gt; channel is slow like a (disabled) turtle...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Commands from babies, adults please go and edit &lt;code&gt;~&#x2F;.condarc&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conda&lt;&#x2F;span&gt;&lt;span&gt; config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --add&lt;&#x2F;span&gt;&lt;span&gt; channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conda&lt;&#x2F;span&gt;&lt;span&gt; config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --add&lt;&#x2F;span&gt;&lt;span&gt; channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conda&lt;&#x2F;span&gt;&lt;span&gt; config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --set&lt;&#x2F;span&gt;&lt;span&gt; show_channel_urls yes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# reference
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# https:&#x2F;&#x2F;mirror.tuna.tsinghua.edu.cn&#x2F;help&#x2F;anaconda&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conda&lt;&#x2F;span&gt;&lt;span&gt; config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --add&lt;&#x2F;span&gt;&lt;span&gt; channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;pytorch&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Done
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conda&lt;&#x2F;span&gt;&lt;span&gt; install pytorch torchvision cudatoolkit=10.0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;cloning-conda-environment&quot;&gt;Cloning Conda Environment&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Running Docker container as a non-root user is a good practice (maybe its just a rumour lol). BUT, most Docker containers have packages installed as root user. What can we do?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;my-issue-at-the-time&quot;&gt;My Issue At the Time&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Goal:&lt;&#x2F;strong&gt; 
Docker Pytorch environment with working &lt;code&gt;nvcc&lt;&#x2F;code&gt; and &lt;code&gt;nvprof&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Issues:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;nvcc&lt;&#x2F;code&gt; and &lt;code&gt;nvprof&lt;&#x2F;code&gt; versions need to match exactly (which is not true for CUDA 11.3 and 11.4, not matter whether you installed it using NVIDIA&#x27;s CUDA images or conda&#x27;s &lt;code&gt;cudatoolkit-dev&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Pytorch only supports up to CUDA 11.3 (else you need to build it from source but no thanks mate)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;nvcc&lt;&#x2F;code&gt; and &lt;code&gt;nvprof&lt;&#x2F;code&gt; version needs to support my WSL&#x27;s CUDA driver version (11.5) (not too sure if this is 100% necessary)&lt;&#x2F;li&gt;
&lt;li&gt;NVIDIA&#x27;s &lt;code&gt;nvcr.io&#x2F;nvidia&#x2F;pytorch:21.12-py3&lt;&#x2F;code&gt; has pytorch installed in the &lt;code&gt;root&lt;&#x2F;code&gt;&#x27;s conda, but I want to run the container as non-root and be able to install additional packages&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;&#x2F;strong&gt;
Clone conda environment. My &lt;code&gt;Dockerfile&lt;&#x2F;code&gt; is as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;dockerfile&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dockerfile &quot;&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span&gt; nvcr.io&#x2F;nvidia&#x2F;pytorch:21.12-py3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;ARG &lt;&#x2F;span&gt;&lt;span&gt;USERNAME=user
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;ARG &lt;&#x2F;span&gt;&lt;span&gt;USER_UID=1000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;ARG &lt;&#x2F;span&gt;&lt;span&gt;USER_GID=$USER_UID
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Change shell
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;SHELL &lt;&#x2F;span&gt;&lt;span&gt;[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;bin&#x2F;bash&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-c&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Add User
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span&gt;groupadd --gid $USER_GID $USERNAME \
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;amp;&amp;amp; useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;amp;&amp;amp; apt-get update -y \
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;amp;&amp;amp; apt-get upgrade -y \
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;amp;&amp;amp; apt-get install -y sudo git wget curl htop build-essential ninja-build \
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;amp;&amp;amp; echo $USERNAME ALL=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;\(&lt;&#x2F;span&gt;&lt;span&gt;root&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;\)&lt;&#x2F;span&gt;&lt;span&gt; NOPASSWD:ALL &amp;gt; &#x2F;etc&#x2F;sudoers.d&#x2F;$USERNAME \
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;amp;&amp;amp; chmod 0440 &#x2F;etc&#x2F;sudoers.d&#x2F;$USERNAME
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Install conda packages for VSCode
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span&gt;conda install -y black flake8 autoflake
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;USER &lt;&#x2F;span&gt;&lt;span&gt;user
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Include CUDA binaries in PATH
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;ENV &lt;&#x2F;span&gt;&lt;span&gt;PATH=&#x2F;opt&#x2F;conda&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;cuda&#x2F;bin:$PATH
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Create local conda environment
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span&gt;conda init --all \
&lt;&#x2F;span&gt;&lt;span&gt;	&amp;amp;&amp;amp; conda create --name user --clone base
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span&gt;echo &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;conda activate user&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &amp;gt;&amp;gt; &#x2F;home&#x2F;user&#x2F;.bashrc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;WORKDIR &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;home&#x2F;user
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;CMD &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;bash&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;extra-note&quot;&gt;Extra Note&lt;&#x2F;h3&gt;
&lt;p&gt;Ideally, your docker non-root user should match your Windows user&#x27;s UID and GID in order to preserve file permissions. However, if you use VSCode&#x27;s &lt;code&gt;.devcontainer.json&lt;&#x2F;code&gt; to launch the container, they will run the UID and GID matching script for you (it might take a while though).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Microsoft Windows Productivity Hacks And Tricks</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/microsoft-windows-productivity-hacks-and-tricks/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/microsoft-windows-productivity-hacks-and-tricks/</id>
		<content type="html">&lt;h2 id=&quot;shortcut-hacks&quot;&gt;Shortcut Hacks&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;docs&#x2F;tech&#x2F;saving-pulsesecure-password-in-microsoft-windows&quot;&gt;Saving PulseSecure Password in Microsoft Windows&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;wsl-hacks&quot;&gt;WSL Hacks&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;docs&#x2F;tech&#x2F;ssh-into-a-wsl2-host-remotely&quot;&gt;SSH into a WSL2 Host Remotely&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Personal Notes On Consumer Electronics</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/personal-notes-on-consumer-electronics/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/personal-notes-on-consumer-electronics/</id>
		<content type="html">&lt;h2 id=&quot;dell-xps-17-and-wd19tb-electrical-whine&quot;&gt;Dell XPS 17 and WD19TB Electrical Whine&lt;&#x2F;h2&gt;
&lt;p&gt;I have both the Dell XPS 17 9700 and WD19TB and they both have a very noticeable electrical whine &#x2F; charging noise when plugged into AC power. I found this &lt;a href=&quot;https:&#x2F;&#x2F;www.dell.com&#x2F;community&#x2F;XPS&#x2F;XPS-17-9700-Charging-noise&#x2F;td-p&#x2F;7669861&#x2F;page&#x2F;2&quot;&gt;solution&lt;&#x2F;a&gt; online and it indeed solved the issue.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Go to &lt;code&gt;Control Panel\Hardware and Sound\Power Options\Change plan settings&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Select &lt;code&gt;Change advanced power settings =&amp;gt; Processor power management&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Change to:&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;# Online solution suggest changing to 99%, but 0% works for me. And I&amp;#39;m afraid minimum 99% kills my battery very fast.
&lt;&#x2F;span&gt;&lt;span&gt;Minimum processor state
&lt;&#x2F;span&gt;&lt;span&gt;- On battery: 0%
&lt;&#x2F;span&gt;&lt;span&gt;- Plugged in: 0%
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Maximum Processor State
&lt;&#x2F;span&gt;&lt;span&gt;- On battery: 99%
&lt;&#x2F;span&gt;&lt;span&gt;- Plugged in: 99%
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Running Custom Command Using Windows Shortcuts</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/running-custom-command-using-windows-shortcuts/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/running-custom-command-using-windows-shortcuts/</id>
		<content type="html">&lt;blockquote&gt;
&lt;p&gt;I have a personal Obsidian PKM and I edit it in both Obsidian and VSCode (since I have nice LaTEX snippets + git push script in VSCode). I find it way too troublesome to open the PKM folder in VSCode by hand every time, so I searched for a solution online...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Steps:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;code&gt;Properties&lt;&#x2F;code&gt; pane&lt;&#x2F;li&gt;
&lt;li&gt;Set &lt;code&gt;Target&lt;&#x2F;code&gt; to &lt;code&gt;%comspec% &#x2F;c &amp;lt;command&amp;gt;&lt;&#x2F;code&gt; (&lt;code&gt;&#x2F;c&lt;&#x2F;code&gt; = close command prompt, &lt;code&gt;&#x2F;k&lt;&#x2F;code&gt; = keep command prompt. If you set &lt;code&gt;c&#x2F;&lt;&#x2F;code&gt;, remember to set &lt;code&gt;Run&lt;&#x2F;code&gt;  to Minimized to avoid a flashing command prompt.)&lt;&#x2F;li&gt;
&lt;li&gt;Set &lt;code&gt;Start in&lt;&#x2F;code&gt; to your desired working directory (equivalent to running the command in that directory)&lt;&#x2F;li&gt;
&lt;li&gt;Set a fancy icon, see mine :) 
&lt;a href=&quot;&#x2F;docs&#x2F;attachments&#x2F;obsidian-vscode-shortcut-icon.ico&quot;&gt;obsidian_vscode_shortcut_icon.ico&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Pin it to the Task bar!&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;&#x2F;strong&gt;
If you want to open a certain folder in VSCode, use &lt;code&gt;%comspec% &#x2F;c code &amp;lt;full_path&amp;gt;&lt;&#x2F;code&gt; instead of &lt;code&gt;%comspec% &#x2F;c code .&lt;&#x2F;code&gt; even if you have set your &lt;code&gt;Start in&lt;&#x2F;code&gt; to &lt;code&gt;&amp;lt;full_path&amp;gt;&lt;&#x2F;code&gt;. This is because multiple shortcuts with the same &lt;code&gt;Target&lt;&#x2F;code&gt; cannot be pinned to the taskbar together. To avoid future clashes, we should specify the full path in &lt;code&gt;Target&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>SSH Into A WSL2 Host Remotely</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/ssh-into-a-wsl2-host-remotely/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/ssh-into-a-wsl2-host-remotely/</id>
		<content type="html">&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;&#x2F;h2&gt;
&lt;p&gt;WSL2 is great and ever improving (if it solves the issues related to Serial Port Forwarding, CUDA without Docker and GUI). Sometimes we might want to SSH into our WSL2 machine remotely (for some peculiar reasons), e.g.:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I want to quickly &lt;code&gt;rsync&lt;&#x2F;code&gt; files from remote host into my local machine (and I don&#x27;t care about security), so I want to use SSH with a fast cipher. Sadly, I don&#x27;t have admin rights on the remote host, may be I can instead run &lt;code&gt;rsync&lt;&#x2F;code&gt; from the remote host into my WSL2 instance!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: most contents are reference from &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@gilad215&#x2F;ssh-into-a-wsl2-host-remotely-and-reliabley-578a12c91a2&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;&#x2F;h2&gt;
&lt;p&gt;Install OpenSSH server:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Inside your WSL2 distro
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install openssh-server
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Listen to port (not 22 since it is used by Windows):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;# &#x2F;etc&#x2F;ssh&#x2F;sshd_config
&lt;&#x2F;span&gt;&lt;span&gt;Port 2222  
&lt;&#x2F;span&gt;&lt;span&gt;ListenAddress 0.0.0.0  
&lt;&#x2F;span&gt;&lt;span&gt;PasswordAuthentication yes
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Remove password requirement to start &lt;code&gt;ssh&lt;&#x2F;code&gt; service (for automation script), and start &lt;code&gt;ssh&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; ALL=NOPASSWD: &#x2F;usr&#x2F;sbin&#x2F;service ssh *
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span&gt; ssh start
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Forward ports using the automation script (Edit &lt;code&gt;$Ports&lt;&#x2F;code&gt; as needed, save as &lt;code&gt;wsl_ssh.ps1&lt;&#x2F;code&gt;  and run it):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-powershell &quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Start SSH Service.
&lt;&#x2F;span&gt;&lt;span&gt;wsl sudo service ssh start
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# WSL2 network port forwarding script v1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#   for enable script, &amp;#39;Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope CurrentUser&amp;#39; in Powershell,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#   for delete exist rules and ports use &amp;#39;delete&amp;#39; as parameter, for show ports use &amp;#39;list&amp;#39; as parameter.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#   written by Daehyuk Ahn, Aug-1-2020
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Display all portproxy information
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;If &lt;&#x2F;span&gt;&lt;span&gt;($Args[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] -eq &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;list&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;    netsh interface portproxy show v4tov4;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;} 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# If elevation needed, start new process
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;If &lt;&#x2F;span&gt;&lt;span&gt;(-NOT ([&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Security.Principal.WindowsPrincipal&lt;&#x2F;span&gt;&lt;span&gt;] [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Security.Principal.WindowsIdentity&lt;&#x2F;span&gt;&lt;span&gt;]::GetCurrent()).IsInRole([&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Security.Principal.WindowsBuiltInRole&lt;&#x2F;span&gt;&lt;span&gt;]::Administrator))
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Relaunch as an elevated process:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;Start-Process powershell.exe &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-File&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;{0}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; -f $MyInvocation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.MyCommand.Path&lt;&#x2F;span&gt;&lt;span&gt;),&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Args runas&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; -Verb RunAs
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;exit
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# You should modify &amp;#39;$Ports&amp;#39; for your applications 
&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Ports &lt;&#x2F;span&gt;&lt;span&gt;= (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2222&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;80&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;443&lt;&#x2F;span&gt;&lt;span&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;8080&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Check WSL ip address
&lt;&#x2F;span&gt;&lt;span&gt;wsl hostname -I | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;Set-Variable &lt;&#x2F;span&gt;&lt;span&gt;-Name &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;WSL&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;found &lt;&#x2F;span&gt;&lt;span&gt;= $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WSL &lt;&#x2F;span&gt;&lt;span&gt;-match &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(-not $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;found&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;  echo &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;WSL2 cannot be found. Terminate script.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Remove and Create NetFireWallRule
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;Remove-NetFireWallRule &lt;&#x2F;span&gt;&lt;span&gt;-DisplayName &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;WSL 2 Firewall Unlock&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;($Args[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] -ne &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;delete&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;New-NetFireWallRule &lt;&#x2F;span&gt;&lt;span&gt;-DisplayName &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;WSL 2 Firewall Unlock&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; -Direction Outbound -LocalPort $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Ports &lt;&#x2F;span&gt;&lt;span&gt;-Action Allow -Protocol TCP;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;New-NetFireWallRule &lt;&#x2F;span&gt;&lt;span&gt;-DisplayName &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;WSL 2 Firewall Unlock&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; -Direction Inbound -LocalPort $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Ports &lt;&#x2F;span&gt;&lt;span&gt;-Action Allow -Protocol TCP;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Add each port into portproxy
&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Addr &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;0.0.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Foreach &lt;&#x2F;span&gt;&lt;span&gt;($&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Ports&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    iex &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;netsh interface portproxy delete v4tov4 listenaddress=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Addr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; listenport=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; | Out-Null&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;($Args[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] -ne &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;delete&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;        iex &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;netsh interface portproxy add v4tov4 listenaddress=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Addr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; listenport=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; connectaddress=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WSL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; connectport=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; | Out-Null&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Display all portproxy information
&lt;&#x2F;span&gt;&lt;span&gt;netsh interface portproxy show v4tov4;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Give user to chance to see above list when relaunched start
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;If &lt;&#x2F;span&gt;&lt;span&gt;($Args[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] -eq &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;runas&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; -Or $Args[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] -eq &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;runas&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;Write-Host &lt;&#x2F;span&gt;&lt;span&gt;-NoNewLine &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Press any key to close! &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;  $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span&gt;= $Host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.UI.RawUI.ReadKey&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;NoEcho,IncludeKeyDown&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;&#x2F;strong&gt; This automation script does not work when Docker WSL backend is running. Turn off Docker&#x27;s &lt;code&gt;Use WSL Backend&lt;&#x2F;code&gt;, disable it for all WSL distros and delete the Docker WSL folders (enter &lt;code&gt;Linux&lt;&#x2F;code&gt; in File Explorer address bar) before running the script. You can turn Docker back on afterwards.&lt;&#x2F;p&gt;
&lt;p&gt;Remember to use &lt;code&gt;-p 2222&lt;&#x2F;code&gt; when SSH-ing into your WSL2 :)&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Ubuntu SSH Machine Learning Server Setup</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/ubuntu-ssh-machine-learning-server-setup/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/ubuntu-ssh-machine-learning-server-setup/</id>
		<content type="html">&lt;h2 id=&quot;os-installation&quot;&gt;OS Installation&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&quot;https:&#x2F;&#x2F;ubuntu.com&#x2F;download&#x2F;server&quot;&gt;Ubuntu Server&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Create a bootable USB using balenaEtcher&lt;&#x2F;li&gt;
&lt;li&gt;Go to your PC&#x27;s BIOS and enable Booting from Storage Device (UEFI)&lt;&#x2F;li&gt;
&lt;li&gt;Insert USB, reboot and select USB as boot medium (or drag to top and reboot)&lt;&#x2F;li&gt;
&lt;li&gt;Follow the on-screen instructions to install Ubuntu Server, below are my preferences
&lt;ul&gt;
&lt;li&gt;Use whole SSD disk, no logical volumes (it is just a mess to manage, so painful when upgrading SSDs)&lt;&#x2F;li&gt;
&lt;li&gt;No pre-installed packages&lt;&#x2F;li&gt;
&lt;li&gt;Ethernet connection only&lt;&#x2F;li&gt;
&lt;li&gt;Install OpenSSH without importing identity&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;em&gt;Note: it takes quite some time to reach the installation screen, be patient and don&#x27;t panic if you see stuff like &lt;code&gt;stdin: invalid argument&lt;&#x2F;code&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;admin-user-setup&quot;&gt;Admin User Setup&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;install-essentials&quot;&gt;Install Essentials&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; update &amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; upgrade
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; build-essential
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;install-nvidia-driver&quot;&gt;Install NVIDIA Driver&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; nvidia-driver-495
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; reboot
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;install-docker&quot;&gt;Install Docker&lt;&#x2F;h3&gt;
&lt;p&gt;Add Docker repo:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -fsSL&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; gpg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --dearmor -o&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo \ &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;deb [arch=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dpkg --print-architecture&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;) signed-by=&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu \ &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lsb_release -cs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;) stable&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &amp;gt; &#x2F;dev&#x2F;null
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Install Docker:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; docker-ce docker-ce-cli containerd.i
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;install-nvidia-container-toolkit&quot;&gt;Install NVIDIA Container Toolkit&lt;&#x2F;h3&gt;
&lt;p&gt;Setup &lt;code&gt;stable&lt;&#x2F;code&gt; repository and GPG key:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;distribution&lt;&#x2F;span&gt;&lt;span&gt;=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; &#x2F;etc&#x2F;os-release&lt;&#x2F;span&gt;&lt;span&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ID&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;VERSION_ID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span&gt;\
&lt;&#x2F;span&gt;&lt;span&gt;   &amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -s -L&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;nvidia.github.io&#x2F;nvidia-docker&#x2F;gpgkey | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-key add - \
&lt;&#x2F;span&gt;&lt;span&gt;   &amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -s -L&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;nvidia.github.io&#x2F;nvidia-docker&#x2F;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;distribution&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;nvidia-docker.list | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;nvidia-docker.list
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Install &lt;code&gt;nvidia-docker2&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; nvidia-docker2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Restart Docker and test:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl restart docker
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; docker run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --rm --gpus&lt;&#x2F;span&gt;&lt;span&gt; all nvidia&#x2F;cuda:11.0-base nvidia-smi
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;formatting-data-drive-s&quot;&gt;Formatting Data Drive(s)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, if your SSD is &#x2F;dev&#x2F;nvme0n1. &lt;a href=&quot;https:&#x2F;&#x2F;linuxconfig.org&#x2F;partitioning-and-formatting-of-samsung-ssd-850-pro-with-linux&quot;&gt;ref&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Start interation:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; fdisk &#x2F;dev&#x2F;nvme0n1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Dialogue:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;Command (m for help): n
&lt;&#x2F;span&gt;&lt;span&gt;Select (default p): p
&lt;&#x2F;span&gt;&lt;span&gt;Partition number (1-4, default 1): 1
&lt;&#x2F;span&gt;&lt;span&gt;Command (m for help): w
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Make filesystem:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; mkfs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -t&lt;&#x2F;span&gt;&lt;span&gt; ext4 &#x2F;dev&#x2F;nvme0n1p1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;automount-data-drive-s&quot;&gt;Automount Data Drive(s)&lt;&#x2F;h3&gt;
&lt;p&gt;Find data partition:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; fdisk&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -l
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Find UUID of data partition:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; blkid
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Create mount point:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; mkdir &#x2F;data
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Add &lt;code&gt;fstab&lt;&#x2F;code&gt; entry:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; nano &#x2F;etc&#x2F;fstab
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Add the entry:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;UUID=14D82C19D82BF81E &#x2F;data    auto defaults 0 0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UUID&lt;&#x2F;code&gt;: safer to use UUID than e.g. &lt;code&gt;&#x2F;dev&#x2F;sdb&lt;&#x2F;code&gt; because UUID never changes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;&#x2F;data&lt;&#x2F;code&gt;: mount point&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;auto&lt;&#x2F;code&gt;: automatically determine filesystem&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;defaults&lt;&#x2F;code&gt;: default options&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;0&lt;&#x2F;code&gt;: determines which filesystems need to be dumped (default is &lt;code&gt;0&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;0&lt;&#x2F;code&gt;: determine the order in which filesystem checks are done at boot time (default is &lt;code&gt;0&lt;&#x2F;code&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Change permissions and mount all:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; chmod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -R&lt;&#x2F;span&gt;&lt;span&gt; 777 &#x2F;data
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; mount&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -a
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;prevent-sleep&quot;&gt;Prevent sleep&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; reboot
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;install-zsh-and-starship&quot;&gt;Install ZSH and Starship&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; zsh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sh -c &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -fsSL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; https:&#x2F;&#x2F;starship.rs&#x2F;install.sh)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;new-user-setup-by-admin&quot;&gt;New User Setup (by admin)&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;These steps assume that you have created a new user with a home directory. These steps should also be run for the admin user.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Add SSH public key: &lt;code&gt;&amp;lt;home_dir&amp;gt;&#x2F;.ssh&#x2F;authorized_keys&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Add user to docker group: &lt;code&gt;sudo usermod -aG docker &amp;lt;user&amp;gt;&lt;&#x2F;code&gt; (use &lt;code&gt;newgrp docker&lt;&#x2F;code&gt; to activate new group without logging out)&lt;&#x2F;li&gt;
&lt;li&gt;Add user to data directory: &lt;code&gt;sudo usermod -aG data &amp;lt;user&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;new-user-setup-by-user&quot;&gt;New User Setup (by user)&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;These steps should also be run for the admin user.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;oh-my-zsh&quot;&gt;Oh-my-zsh&lt;&#x2F;h3&gt;
&lt;p&gt;Install Oh-my-zsh and plugins:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wget&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;raw&#x2F;master&#x2F;tools&#x2F;install.sh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -O&lt;&#x2F;span&gt;&lt;span&gt; - | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-syntax-highlighting.git ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ZSH_CUSTOM&lt;&#x2F;span&gt;&lt;span&gt;:-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;.oh-my-zsh&#x2F;custom}&#x2F;plugins&#x2F;zsh-syntax-highlighting
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-autosuggestions ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ZSH_CUSTOM&lt;&#x2F;span&gt;&lt;span&gt;:-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;~&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;.oh-my-zsh&#x2F;custom}&#x2F;plugins&#x2F;zsh-autosuggestions
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Change default shell:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;chsh -s &lt;&#x2F;span&gt;&lt;span&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;which&lt;&#x2F;span&gt;&lt;span&gt; zsh)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Sample &lt;code&gt;~&#x2F;.zshrc&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ZSH&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;.oh-my-zsh&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ZSH_THEME&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;robbyrussell&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HISTSIZE&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SAVEHIST&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1000000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setopt&lt;&#x2F;span&gt;&lt;span&gt; INC_APPEND_HISTORY
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setopt&lt;&#x2F;span&gt;&lt;span&gt; HIST_IGNORE_DUPS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setopt&lt;&#x2F;span&gt;&lt;span&gt; EXTENDED_HISTORY
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;plugins&lt;&#x2F;span&gt;&lt;span&gt;=(
&lt;&#x2F;span&gt;&lt;span&gt; zsh-syntax-highlighting
&lt;&#x2F;span&gt;&lt;span&gt; zsh-autosuggestions
&lt;&#x2F;span&gt;&lt;span&gt;)  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;source &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ZSH&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;oh-my-zsh.sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;starship&quot;&gt;Starship&lt;&#x2F;h3&gt;
&lt;p&gt;Add this to &lt;code&gt;~&#x2F;.zshrc&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;eval &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;starship&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; init zsh)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Sample &lt;code&gt;~&#x2F;.config&#x2F;starship.toml&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span&gt;[username]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;disabled &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[hostname]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;disabled &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[conda]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;format &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;([[$style|$environment]]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ignore_base &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[git_status]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conflicted &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;⚔️ &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ahead &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;🔺×$count &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;behind &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;🔻×$count &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;diverged &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;🔀 🔺×${ahead_count} 🔻×${behind_count} &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;untracked &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;🔓×$count &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stashed &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;📥 &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;modified &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;📝×$count &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;staged &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;🔒×$count &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;renamed &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;deleted &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;🔥×$count &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;style &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;bright-white&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;format &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$all_status$ahead_behind&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;install-mambaforge&quot;&gt;Install Mambaforge&lt;&#x2F;h3&gt;
&lt;p&gt;Installation:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wget&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;github.com&#x2F;conda-forge&#x2F;miniforge&#x2F;releases&#x2F;latest&#x2F;download&#x2F;Mambaforge-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span&gt;)-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span&gt;).sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bash&lt;&#x2F;span&gt;&lt;span&gt; Mambaforge-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span&gt;)-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span&gt;).sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Setup (please re-open your shell):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mamba&lt;&#x2F;span&gt;&lt;span&gt; init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --all
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rm&lt;&#x2F;span&gt;&lt;span&gt; Mambaforge-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span&gt;)-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span&gt;).sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;conda&lt;&#x2F;span&gt;&lt;span&gt; config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --set&lt;&#x2F;span&gt;&lt;span&gt; changeps1 False
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;shell-alias&quot;&gt;Shell Alias&lt;&#x2F;h3&gt;
&lt;p&gt;Add this to &lt;code&gt;~&#x2F;.zshrc&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;source &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;.local&#x2F;.shellrc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Sample &lt;code&gt;$HOME&#x2F;.local&#x2F;.shellrc&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;extract&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt; archive &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-f &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in
&lt;&#x2F;span&gt;&lt;span&gt;                        *.tar.bz2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span&gt; xvjf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.tar.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span&gt; xvzf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.tar.xz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span&gt; xvf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.bz2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bunzip2 &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.rar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rar&lt;&#x2F;span&gt;&lt;span&gt; x $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.gz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gunzip &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.tar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span&gt; xvf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.tbz2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span&gt; xvjf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.tgz&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tar&lt;&#x2F;span&gt;&lt;span&gt; xvzf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.zip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;unzip &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.Z&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uncompress &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *.7z&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;7z&lt;&#x2F;span&gt;&lt;span&gt; x $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive &lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;                        *&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;don&amp;#39;t know how to extract &amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;...&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; ;;
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;esac
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;archive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39; is not a valid file!&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;done
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Git
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;ga&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;git add -A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;gc&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;git commit -m&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;gac&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;git add -A &amp;amp;&amp;amp; git commit -m&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;grm&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;git rm -r --cached .&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;gp&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;git push --tags&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;gir&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;git rebase -i HEAD~15&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# List
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ls -lAh&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;cp&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cp -r&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;mk&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mkdir -p&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;rm&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;rm -rf --preserve-root&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Apt-get
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sudo apt-get install -y&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sudo apt-get update -y &amp;amp;&amp;amp; sudo apt-get upgrade -y&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Mamba
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;mi&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mamba install -y -c conda-forge&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;ma&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mamba activate&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;mc&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mamba create python=3.9 jupyter notebook flake8 autopep8 pandas numpy scipy matplotlib seaborn -y -n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;mcf&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mamba env create -f env.yaml&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;mu&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mamba env update -f env.yaml --prune&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# History
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;hg&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;history | rg&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# RC
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;zrc&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;code ~&#x2F;.zshrc&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;brc&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;code ~&#x2F;.bashrc&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;source ~&#x2F;.zshrc&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Utils
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;tv&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tidy-viewer&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;machine&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;macchina&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;bw&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;bandwhich&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>VSCode Resources</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/vscode-resources/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/vscode-resources/</id>
		<content type="html">&lt;h2 id=&quot;settings&quot;&gt;Settings&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;C++ Formatter Settings: &lt;a href=&quot;https:&#x2F;&#x2F;clang.llvm.org&#x2F;docs&#x2F;ClangFormatStyleOptions.html&quot;&gt;Clang format style options&lt;&#x2F;a&gt;(for &lt;code&gt;.clang-format&lt;&#x2F;code&gt; or VSCode settings)&lt;&#x2F;li&gt;
&lt;li&gt;Favourite mono font with font ligatures: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;cascadia-code&quot;&gt;Microsoft Cascadia Code&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;note&quot;&gt;Note&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Command substitution does not work in &lt;code&gt;devcontainer.json&lt;&#x2F;code&gt;, which is pretty sad (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;microsoft&#x2F;vscode-remote-release&#x2F;issues&#x2F;1050&quot;&gt;reference&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;weird-issues&quot;&gt;Weird Issues&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;When using (WSL2) + remote host + devcontainer ==&amp;gt; &lt;code&gt;localEnv&lt;&#x2F;code&gt; need to be set in &lt;code&gt;.bash_profile&lt;&#x2F;code&gt; not &lt;code&gt;.bashrc&lt;&#x2F;code&gt; because VSCode runs  a login shell (?) through ssh everytime&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>WSL2 NVIDIA Docker Error</title>
		<published>2022-08-02T02:41:06.395252+00:00</published>
		<updated>2022-08-02T02:41:06.395252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tech/wsl2-nvidia-docker-error/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tech/wsl2-nvidia-docker-error/</id>
		<content type="html">&lt;p&gt;There are plenty of tutorials online teaching you how to set up CUDA containers in WSL2. However, I encountered a very weird error which was &lt;strong&gt;completely undocumented&lt;&#x2F;strong&gt; on the web. I forgot the exact context but the error contains something like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;OMP: System error #13: Permission denied &amp;quot;OMP: Error #178&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;OMP: Error #178: Function Can&amp;#39;t open SHM2 failed
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After struggling for hours searching on both Google and Baidu, I looked into the source code (by searching for &lt;code&gt;Can&#x27;t open SHM2&lt;&#x2F;code&gt; inside OMP&#x27;s repo) and realized that it was caused by shared memory (&lt;code&gt;shm&lt;&#x2F;code&gt;) permission issues. After changing the &lt;code&gt;docker run&lt;&#x2F;code&gt; argument &lt;code&gt;--ipc=host&lt;&#x2F;code&gt; tp &lt;code&gt;--shm-size=1g&lt;&#x2F;code&gt; (erm, which was recommended by NVIDIA &lt;a href=&quot;https:&#x2F;&#x2F;docs.nvidia.com&#x2F;deeplearning&#x2F;frameworks&#x2F;user-guide&#x2F;index.html&quot;&gt;here&lt;&#x2F;a&gt;), the issue was resolved. I have quoted the paragrpah below, apparently this option is not compulsory:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, Docker containers are allotted 64MB of shared memory. This can be insufficient, particularly when using all 8 GPUs. To increase the shared memory limit to a specified size, for example 1GB, include the &lt;code&gt;--shm-size=1g&lt;&#x2F;code&gt; flag in your docker run command.
Alternatively, you can specify the &lt;code&gt;--ipc=host&lt;&#x2F;code&gt; flag to re-use the host’s shared memory space inside the container. Though this latter approach has security implications as any data in shared memory buffers could be visible to other containers.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Eureka Concepts</title>
		<published>2022-08-02T02:41:06.391252+00:00</published>
		<updated>2022-08-02T02:41:06.391252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/eureka-concepts/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/eureka-concepts/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;EMA improves model performance... but doesn&#x27;t optimizer already account for moving averages?
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;blog.csdn.net&#x2F;mikelkl&#x2F;article&#x2F;details&#x2F;85227053&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;medium.com&#x2F;analytics-vidhya&#x2F;complete-deep-learning-roadmap-8748c0475dc1&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;i.am.ai&#x2F;roadmap&#x2F;#machine-learning-roadmap&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Overly Complicated Diagram Of MLOps</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/overly-complicated-diagram-of-mlops/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/overly-complicated-diagram-of-mlops/</id>
		<content type="html">&lt;p&gt;Something feels wrong...&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;pasted-image-20220424141351.png&quot; alt=&quot;Pasted image 20220424141351.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Tools</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/tools/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/tools/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;J-cabin&#x2F;Awesome-ML-Tools&lt;&#x2F;p&gt;
&lt;h1 id=&quot;visualization&quot;&gt;Visualization&lt;&#x2F;h1&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.kaggle.com&#x2F;getting-started&#x2F;253300s&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Cool Skills That I Do Not Possess</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/lists/cool-skills-that-i-do-not-possess/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/lists/cool-skills-that-i-do-not-possess/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;Posh British accent&lt;&#x2F;li&gt;
&lt;li&gt;Doing backflips&lt;&#x2F;li&gt;
&lt;li&gt;Cycling with no hands&lt;&#x2F;li&gt;
&lt;li&gt;Playing Guitar properly&lt;&#x2F;li&gt;
&lt;li&gt;Ability to throw a bowling ball in the intended direction&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Fancy Recipes</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/lists/fancy-recipes/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/lists/fancy-recipes/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ieatishootipost.sg&#x2F;leslie-char-siu-recipe&#x2F;&quot;&gt;Char Siew&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Golden Corn (yet to find)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Machines Wishlist</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/lists/machines-wishlist/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/lists/machines-wishlist/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;Carbide 3D Nomad&lt;&#x2F;li&gt;
&lt;li&gt;Prusa Mini&lt;&#x2F;li&gt;
&lt;li&gt;Voron 1.9&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Practical Skills In Dealing With People</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/lists/practical-skills-in-dealing-with-people/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/lists/practical-skills-in-dealing-with-people/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;When you want someone to do something, do not ask yes or no, ask them to choose between two alternatives:
&lt;ul&gt;
&lt;li&gt;Do not ask &amp;quot;Shall we go out on the weekend?&amp;quot;, ask &amp;quot;Should we go for a movie or shopping this weekend?&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;Intuition: do not ask a yes or no question when the other&#x27;s default is no and you want a yes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;When you want to enforce a rule and people are not following, do not order them to follow, ask if there is something preventing them from doing so?
&lt;ul&gt;
&lt;li&gt;E.g. if employees are not wearing safety hats, ask if it is because the hat is uncomfortable etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;When you ask for a favour, always give a reason (use &lt;strong&gt;because...&lt;&#x2F;strong&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Show your imperfections intentionally to make yourself more likeable and approachable&lt;&#x2F;li&gt;
&lt;li&gt;Reading implications from conversations
&lt;ul&gt;
&lt;li&gt;If someone did not say a straightforward yes, it means they want to reject&lt;&#x2F;li&gt;
&lt;li&gt;See you again when we have time = see you never&lt;&#x2F;li&gt;
&lt;li&gt;I don&#x27;t like to bother &#x2F; trouble others = I don&#x27;t like to be bothered&lt;&#x2F;li&gt;
&lt;li&gt;I will try = No thank you&lt;&#x2F;li&gt;
&lt;li&gt;I will go back and think about it = I wont think about it&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Good Mentality
&lt;ul&gt;
&lt;li&gt;Dont be afraid of disappointing others, you did not force them to have expectations on you&lt;&#x2F;li&gt;
&lt;li&gt;Let your behaviour be consistent with your thoughts and trust that others will do the same. Anything that the other did not express and you did not observe, do not assume.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Quotes</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/lists/quotes/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/lists/quotes/</id>
		<content type="html">&lt;h3 id=&quot;jian-shi&quot;&gt;《見識》&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;你所賺的每一分錢，都是你對這個世界認知的變現。你所虧的每一分錢，都是你對這個世界認知有缺陷。你永遠賺不到超出你認知範圍之外的錢，除非你靠運氣，但是靠運氣賺到的錢，最後往往會由於實力不足而虧掉。
這個世界最大的公平就在於：
當一個人的認知不足以駕馭他所擁有的財富時，這個社會有100種方法收割他。直到你的財富和認知相匹配為止。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;lan-si-deng-ding-lu-lansdown-law&quot;&gt;藍斯登定律 (LanSdown Law)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;給員工快樂的工作環境是最好的激勵&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;ji-de-lin-fa-ze-jidelim-law&quot;&gt;吉德林法則 (Jidelim Law)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;把難題清清楚楚地寫出來，便已經解決了一半&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;很多時候，我們看到別人輕而易舉的解決問題，你說其實我也可以。可是為什麼那個風光無限的人不是你呢。愛因斯坦給出了答案：“因為解決問題不過是數學或實驗的技巧罷了，發現問題才更具有實質意義。”&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ma-ying-xiao-ying-horse-flies-effect&quot;&gt;馬蠅效應 (Horse Flies effect)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;若企業管理者能找到合適的激勵因素，就能讓能力突出的員工賣力工作。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;bo-ke-ding-li-paucker-theory&quot;&gt;波克定理(Paucker Theory)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;只有在爭辯中，才可能誕生最好的主意和最好的決定。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;(similar to Devil&#x27;s Advocate). Depends on two criteria:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Similar ability between the arguing parties&lt;&#x2F;li&gt;
&lt;li&gt;Rational parties involved in argument&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;ta-ma-la-xiao-ying-tamala-effect&quot;&gt;塔馬拉效應(Tamala Effect)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;學會在領導面前隱藏實力&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;ci-wei-li-lun&quot;&gt;刺猬理論&lt;&#x2F;h3&gt;
&lt;p&gt;刺猬理論，源於刺猬在天冷時彼此靠攏取暖，但保持一定距離，以免互相刺傷的現象。在管理學中，刺猬理論強調的就是人際交往中的“心理距離效應”。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;一個優秀的領導者和管理者，要做到疏者密之，密者疏之，這才是成功之道。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;fu-luo-si-te-fa-ze&quot;&gt;弗洛斯特法則&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;要築一堵牆，首先就要明晰築牆的範圍，把那些真正屬於自己的東西圈進來，把那些不屬於自己的東西圈出去&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;要對自己有一個明確的定位&lt;&#x2F;li&gt;
&lt;li&gt;拒絕盲目跟風&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;zi-chi-you-zai-xiao-ying&quot;&gt;自吃幼崽效應&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;拿出更好看產品來擊敗自己的原有產品。自己不逼自己，別人遲早會逼你。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;fu-ke-lan-ding-lu&quot;&gt;福克蘭定律&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;當不知如何行動時，最好的行動就是不採取任何行動。沒有必要作出決定時，就有必要不作決定&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;du-qi-xiao-ying&quot;&gt;毒氣效應&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;如果一直溫文爾雅、言聽行從，有時就會被人當成木頭一根，被人呼來喚去，撥來撥去，被當成一個完全的“機器人”在使用。如果能在適當的時候，發點脾氣，有點不聽使喚，這時會被指使者引起格外重視，反而會把他當成一個活生生的人，以致不被隨意地呼喚。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;fu-lan-ke-lin-xiao-ying-ben-franklin-effect&quot;&gt;富蘭克林效應 (Ben Franklin effect)&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;那些曾經幫助過你的人會更願意再幫你一次。換句話説，讓別人喜歡你的最好方法不是去幫助他們，而是讓他們來幫助你。如果想得到別人的好感，主動開口是沒壞處的。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Singapore Restaurants</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/lists/singapore-restaurants/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/lists/singapore-restaurants/</id>
		<content type="html">&lt;p&gt;&lt;strong&gt;Goodest&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Burger and Lobster&lt;&#x2F;li&gt;
&lt;li&gt;Paddy Hills: Black riceeee &amp;lt;3 but their r closed, sad. Anyways black rice was a limited time thing.&lt;&#x2F;li&gt;
&lt;li&gt;Atlas: For vibes, don&#x27;t get kicked out by wearing casual. Shorts are considered casual, they don&#x27;t give face one &amp;gt;.&amp;lt;&lt;&#x2F;li&gt;
&lt;li&gt;Halcyon &amp;amp; Crane: So nice, sooooooo nice&lt;&#x2F;li&gt;
&lt;li&gt;Potato Heads: Interesting drinks&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Good-ish&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Man Man Unagi: dunno why it is so expensive... I didn&#x27;t gain superpower after eating their unagi, maybe I am a caveman who cannot appreciate their authentic wasabi&lt;&#x2F;li&gt;
&lt;li&gt;Da Shi Jia Prawn Noodle: Used to be good, don&#x27;t know if they changed chef or something? But still decent&lt;&#x2F;li&gt;
&lt;li&gt;63Celsius: Depends on the dish, had moonlight hor fun and iberico char siew rice last time which were amazing.&lt;&#x2F;li&gt;
&lt;li&gt;Frapas: Was good, last time had 50% off on Chope. If full price then nevermind I guess haha.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Hmmmmm&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Lukes Lobster: Not fresh&lt;&#x2F;li&gt;
&lt;li&gt;Neon Pigeon: Dishes sort of overpriced and small portion, drinks have fancy names but doesn&#x27;t taste or look fantastic. Hummus is good though, why not just turn into a hummus store, I will eat that every morning.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Stuff To Read</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/lists/stuff-to-read/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/lists/stuff-to-read/</id>
		<content type="html">&lt;h2 id=&quot;life-and-perspective&quot;&gt;Life and Perspective&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Factfulness: Ten Reasons We&#x27;re Wrong About the World — and Why Things Are Better Than You Think&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
How to win friends and influence people. How to stop worrying and start living&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;management&quot;&gt;Management&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;organizational-behaviour&quot;&gt;Organizational Behaviour&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.worldsupporter.org&#x2F;en&#x2F;chapter&#x2F;39178-summary-organizational-behavior-robbins-judge&quot;&gt;Summary of Organizational Behavior&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=K7agjXFFQJU&quot;&gt;Issues during meetings&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
Hosting meetings
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;hbr.org&#x2F;1976&#x2F;03&#x2F;how-to-run-a-meeting&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;hbr.org&#x2F;2019&#x2F;01&#x2F;why-your-meetings-stink-and-what-to-do-about-it&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
http:&#x2F;&#x2F;www.free-management-ebooks.com&#x2F;news&#x2F;chairing-a-meeting&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;www.thesuccessfactory.co.uk&#x2F;blog&#x2F;the-ultimate-guide-to-chairing-meetings-effectively&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;www.skillsyouneed.com&#x2F;ips&#x2F;conduct-meeting.html&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;hbr.org&#x2F;2016&#x2F;04&#x2F;a-step-by-step-guide-to-structuring-better-meetings&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;hbr.org&#x2F;2016&#x2F;04&#x2F;a-step-by-step-guide-to-structuring-better-meetings&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;management-1&quot;&gt;Management&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;www.forbes.com&#x2F;sites&#x2F;johnhall&#x2F;2019&#x2F;08&#x2F;15&#x2F;the-best-leadership-books-for-new-managers-in-2019&#x2F;#11ef8544e3bc&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;enterprisersproject.com&#x2F;article&#x2F;2019&#x2F;4&#x2F;8-must-read-books-teamwork&lt;&#x2F;li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&#x2F;&gt;
https:&#x2F;&#x2F;monday.com&#x2F;blog&#x2F;teamwork&#x2F;management-books&#x2F;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;interpersonal-relationships&quot;&gt;Interpersonal Relationships&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot; checked=&quot;&quot;&#x2F;&gt;
Arthur Aron&#x27;s 36 questions: turning strangers into friends&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Git Deep Dive</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/git-deep-dive/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/git-deep-dive/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;www.atlassian.com&#x2F;git&#x2F;tutorials&#x2F;git-hooks&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Advanced Numpy</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/python/advanced-numpy/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/python/advanced-numpy/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;advanced-numpy-master-stride-tricks-with-25-illustrated-exercises-923a9393ab20&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Python Advanced Typings</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/python/python-advanced-typings/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/python/python-advanced-typings/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.python.org&#x2F;dev&#x2F;peps&#x2F;pep-0647&#x2F;&quot;&gt;TypeGuards&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;ParamSpec&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Covariant invariant countervariant&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Annotated&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Final&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;ClassVar&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Protocol&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;runtime_checkable&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;NamedTuple&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;TypedDict&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;FrozenSet&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;DefaultDict&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;collections&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;abc&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;async&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;overload, cast, final&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;no_type_check, type_check_only&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;https:&#x2F;&#x2F;dev.to&#x2F;meseta&#x2F;factories-abstract-base-classes-and-python-s-new-protocols-structural-subtyping-20bm&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.geeksforgeeks.org&#x2F;&lt;strong&gt;subclasscheck&lt;&#x2F;strong&gt;-and-&lt;strong&gt;subclasshook&lt;&#x2F;strong&gt;-in-python&#x2F;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;GenericAlias: a parameterized generics&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;https:&#x2F;&#x2F;blog.daftcode.pl&#x2F;covariance-contravariance-and-invariance-the-ultimate-python-guide-8fabc0c24278&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;functools
classmethod =&amp;gt; property =&amp;gt; cache (lazy initialization)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;property =&amp;gt; abstractmethod&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__get__&lt;&#x2F;code&gt;, &lt;code&gt;__class_getitem__&lt;&#x2F;code&gt; etc.&lt;&#x2F;li&gt;
&lt;li&gt;.pyi only works when imported (makes sense, since its a stubby stub)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;trick-to-type-hint-pytorch-call&quot;&gt;Trick to Type Hint Pytorch &lt;code&gt;__call__&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;typing &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Callable, Literal, TypeVar, Union, cast, overload
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;torch.nn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Module
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;C = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TypeVar&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;C&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bound&lt;&#x2F;span&gt;&lt;span&gt;=Callable)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;proxy&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;: C) -&amp;gt; C:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cast&lt;&#x2F;span&gt;&lt;span&gt;(C, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, *&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;, **&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.__class__, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;__call__&lt;&#x2F;span&gt;&lt;span&gt;(*x, **y))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Module&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;overload
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;forward&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hi&lt;&#x2F;span&gt;&lt;span&gt;: int, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;: Literal[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;]) -&amp;gt; float:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;overload
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;forward&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hi&lt;&#x2F;span&gt;&lt;span&gt;: int, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;: Literal[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;]) -&amp;gt; int:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;forward&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hi&lt;&#x2F;span&gt;&lt;span&gt;: int, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span&gt;: bool) -&amp;gt; Union[float, int]:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;hi + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;another&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nononno&lt;&#x2F;span&gt;&lt;span&gt;: str) -&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(nononno)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;__call__ &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;proxy&lt;&#x2F;span&gt;&lt;span&gt;(forward)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;h = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;M&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Python Imports</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/python/python-imports/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/python/python-imports/</id>
		<content type="html">&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;&#x2F;h2&gt;
&lt;p&gt;Python imports has always been a confusing topic for me. The dreaded &lt;code&gt;ImportError: attempted relative import with no known parent package&lt;&#x2F;code&gt; has haunted me for years. And now, I have decided to figure things out once and for all. (No more fear of running a Python script not in the project root directory yay!)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;do-we-still-need-init-py&quot;&gt;Do we still need &lt;code&gt;__init__.py&lt;&#x2F;code&gt;?&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.python.org&#x2F;dev&#x2F;peps&#x2F;pep-0020&#x2F;&quot;&gt;The Zen of Python&lt;&#x2F;a&gt;: Explicit is better than implicit.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Since Python 3.3 (please leave if you use anything older than that, you are not welcomed), &lt;code&gt;__ini__.py&lt;&#x2F;code&gt; is not longer a must for the Python import system. But what exactly happens with &#x2F; without &lt;code&gt;__init__.py&lt;&#x2F;code&gt;? (&lt;a href=&quot;http:&#x2F;&#x2F;python-notes.curiousefficiency.org&#x2F;en&#x2F;latest&#x2F;python_concepts&#x2F;import_traps.html&quot;&gt;reference&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;when-to-include-init-py&quot;&gt;When to include &lt;code&gt;__init__.py&lt;&#x2F;code&gt;?&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Include &lt;code&gt;__init__.py&lt;&#x2F;code&gt; when you don&#x27;t want to open up your namespace to third party contributions (e.g. all standard library packages).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Without &lt;code&gt;__init__.py&lt;&#x2F;code&gt;, multiple directories can contribute to the same package. With &lt;code&gt;__init__.py&lt;&#x2F;code&gt;, a single directory package is created (masking preceding, matching subdirectories on &lt;code&gt;sys.path&lt;&#x2F;code&gt; without &lt;code&gt;__init__.py&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Consider the following directory layout:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;project&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    example&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;        foo.py
&lt;&#x2F;span&gt;&lt;span&gt;project2&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    example&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;        __init__.py
&lt;&#x2F;span&gt;&lt;span&gt;        bar.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We can see the expected results:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;txt&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-txt &quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;&lt;span&gt;$ PYTHONPATH=..&#x2F;project2 python3 -c &amp;quot;import example.bar&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;Hello from  example.bar
&lt;&#x2F;span&gt;&lt;span&gt;$ PYTHONPATH=..&#x2F;project2 python3 -c &amp;quot;import example.foo&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;Traceback (most recent call last):
&lt;&#x2F;span&gt;&lt;span&gt;  File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;ImportError: No module named &amp;#39;example.foo&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;$ rm ..&#x2F;project2&#x2F;example&#x2F;__init__.py
&lt;&#x2F;span&gt;&lt;span&gt;$ PYTHONPATH=..&#x2F;project2 python3 -c &amp;quot;import example.bar&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;Hello from  example.bar
&lt;&#x2F;span&gt;&lt;span&gt;$ PYTHONPATH=..&#x2F;project2 python3 -c &amp;quot;import example.foo&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;Hello from  example.foo
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;with-m-or-without-m&quot;&gt;With &lt;code&gt;-m&lt;&#x2F;code&gt; or without &lt;code&gt;m&lt;&#x2F;code&gt;?&lt;&#x2F;h2&gt;
&lt;p&gt;I can&#x27;t even count how many times I used to do &lt;code&gt;python sub_dir&#x2F;script.py&lt;&#x2F;code&gt; and get &lt;code&gt;ImportError: attempted relative import with no known parent package&lt;&#x2F;code&gt;...&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-does-the-m-do&quot;&gt;What does the &lt;code&gt;-m&lt;&#x2F;code&gt; do?&lt;&#x2F;h3&gt;
&lt;p&gt;When you run &lt;code&gt;python sub_dir&#x2F;script.py&lt;&#x2F;code&gt;, the file is run as a &lt;strong&gt;script&lt;&#x2F;strong&gt;, meaning that the file&#x27;s parent directory is added to &lt;code&gt;sys.path&lt;&#x2F;code&gt; at index &lt;code&gt;0&lt;&#x2F;code&gt;. As such, relative imports inside &lt;code&gt;sub_dir&#x2F;script.py&lt;&#x2F;code&gt; like &lt;code&gt;from ..xxx import yyy&lt;&#x2F;code&gt; do not work as the parent directory of &lt;code&gt;sub_dir&lt;&#x2F;code&gt; is not inside &lt;code&gt;sys.path&lt;&#x2F;code&gt; (imagine the rabit hole that is opened if Python searches through every parent directory of &lt;code&gt;script.py&lt;&#x2F;code&gt; for packages hmmm).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;If this option is given, the first element of &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;sys.html#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; will be the full path to the module file. As with the &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;using&#x2F;cmdline.html#cmdoption-c&quot;&gt;&lt;code&gt;-c&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; option, the current directory will be added to the start of &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;sys.html#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. (&lt;a href=&quot;&#x2F;docs&#x2F;programming&#x2F;python&#x2F;https&#x2F;docs-python-org&#x2F;2&#x2F;using&#x2F;cmdline.html#cmdoption-m%5D%5D&quot;&gt;see&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;If we run &lt;code&gt;python -m sub_dir&#x2F;script&lt;&#x2F;code&gt;, the &lt;code&gt;sys.path&lt;&#x2F;code&gt; behaviour is described above. The Python interpreter will then &amp;quot;search &lt;code&gt;sys.path&lt;&#x2F;code&gt; for the named module and execute its contents as the &lt;code&gt;__main__&lt;&#x2F;code&gt; module&amp;quot;. Thus, the relative imports work as expected.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-is-m-not-the-default-behaviour&quot;&gt;Why is &lt;code&gt;-m&lt;&#x2F;code&gt; not the default behaviour?&lt;&#x2F;h3&gt;
&lt;p&gt;The content above would probably leave a lot of you (including me) wondering why &lt;code&gt;-m&lt;&#x2F;code&gt; is not the default behaviour since often times we actually want to execute a script as a module. To answer that, I would quote Martijn Pieters&#x27;s answer &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;22241420&#x2F;execution-of-python-code-with-m-option-or-not&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Scripts can be opened in &lt;em&gt;any arbitrary path&lt;&#x2F;em&gt; and then their parent directory is added to the module search path. &lt;code&gt;-m&lt;&#x2F;code&gt; only works for the current directory or directories already registered on the search path. That was my point. &lt;code&gt;-m&lt;&#x2F;code&gt; is not something you give to end-users for that very usability issue.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Python RegEx</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/python/python-regex/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/python/python-regex/</id>
		<content type="html">&lt;h2 id=&quot;regex-methods&quot;&gt;RegEx Methods&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;match(pattern: str, string: str) -&amp;gt; Match | None&lt;&#x2F;code&gt;: look for first match at beginning of string&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;search(pattern: str, string: str) -&amp;gt; Match | None&lt;&#x2F;code&gt;: scan through a string for first match&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;findall(pattern: str, string: str) -&amp;gt; List[str | Tuple[str, ...]]&lt;&#x2F;code&gt;: find all matches, returning entire match &#x2F; tuple of subgroup matches&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;match-object&quot;&gt;Match Object&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Match.group(group1: int, ...) -&amp;gt; None | str | Tuple[str, ...]&lt;&#x2F;code&gt;: &lt;code&gt;0&lt;&#x2F;code&gt; is entire match, &lt;code&gt;1&lt;&#x2F;code&gt; onwards is parenthsized subgroup
&lt;ul&gt;
&lt;li&gt;If group is inside unmatched part, return &lt;code&gt;None&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;If group is matched multiple times, return last match&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Match.groups() -&amp;gt; Tuple[str, ...]&lt;&#x2F;code&gt;: returns all subgroups, entire match is not included&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Python Strings</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/python/python-strings/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/python/python-strings/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;byte-string-unicode-string-raw-string-a-guide-to-all-strings-in-python-684c4c4960ba&quot;&gt;Reference&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;eureka-moment&quot;&gt;EUREKA Moment&lt;&#x2F;h2&gt;
&lt;p&gt;Many people scratches their head when trying to comprehend string encodings because they cannot separate between the following:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Human-readable Character&lt;&#x2F;th&gt;&lt;th&gt;Computer Memory&lt;&#x2F;th&gt;&lt;th&gt;Programming Language&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;ä&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;\xc3a4c280c280&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;&amp;quot;\u00e4\u0080\u0080&amp;quot;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;&lt;strong&gt;Human-readable Characters&lt;&#x2F;strong&gt;
The characters that you see on screen. These are displayed to you by the GPU using individual pixels in the screen.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Computer Memory&lt;&#x2F;strong&gt;
The character, when stored on the computer (e.g. if you save a file with the &lt;code&gt;ä&lt;&#x2F;code&gt; character inside it), gets saved in bytes according to the chosen encoding. Most text editors use UTF-8.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Note: above example uses UTF-8 and Big Endian&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Programming Language&lt;&#x2F;strong&gt;
Your specific programming language would have a syntax for specifying Unicode strings. In Python 3, all strings are unicode by default (so &lt;code&gt;&#x27;\u0041&#x27;&lt;&#x2F;code&gt; and &lt;code&gt;u&#x27;\u0041&#x27;&lt;&#x2F;code&gt; are exactly the same). It is however important to distinguish how characters are stored in the &lt;strong&gt;file&lt;&#x2F;strong&gt; versus in &lt;strong&gt;runtime and compile-time&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For example, imagine you have following Python script (&lt;code&gt;simple.py&lt;&#x2F;code&gt;):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;v = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\u00e4\u0080\u0080&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then, &lt;code&gt;simple.py&lt;&#x2F;code&gt; will be stored in the filesystem using the UTF-8 encoding. The characters &amp;quot;&amp;quot;, &amp;quot;u&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;4&amp;quot;, ... will be stored as-in (i.e. &lt;code&gt;0x5c75303065345c75303038305c7530303830&lt;&#x2F;code&gt;). If you run &lt;code&gt;file simple.py&lt;&#x2F;code&gt;, it tells you that the document is ASCII text because the &lt;code&gt;&amp;quot;\u&amp;quot;&lt;&#x2F;code&gt; syntax is only used and interpreted during the Python run time.&lt;&#x2F;p&gt;
&lt;p&gt;However, during runtime, the hex value of v is set to &lt;code&gt;0xc3a4c280c280&lt;&#x2F;code&gt; because the python interpreter reads the string &lt;code&gt;&amp;quot;\u0041&amp;quot;&lt;&#x2F;code&gt; and turns it into UTF-8 bytes. But actually, you can also just do &lt;code&gt;v = &amp;quot;ä&amp;quot;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, note that some programming languages store strings as UTF-16 by default, e.g. Java.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.branah.com&#x2F;unicode-converter&quot;&gt;Unicode Converter&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;unicode&quot;&gt;Unicode&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;ASCII&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;English letters, digits and symbols stored as number between 32 and 127&lt;&#x2F;li&gt;
&lt;li&gt;8-bit was more than enough to store these characters&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Unicode&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Represents every possible symbol and language&lt;&#x2F;li&gt;
&lt;li&gt;Each character is called a code point like &lt;code&gt;U+0000&lt;&#x2F;code&gt; to &lt;code&gt;U+10FFFF&lt;&#x2F;code&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;tutorials.jenkov.com&#x2F;unicode&#x2F;index.html&quot;&gt;reference&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;UTF-8&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;One possible way to store unicode characters in bytes&lt;&#x2F;li&gt;
&lt;li&gt;Each code point is stored using at least 1 byte and code points 0-127 (i.e. ASCII characters) store as-in. Hence backwards-compatible with ASCII&lt;&#x2F;li&gt;
&lt;li&gt;When a byte starts with &lt;code&gt;1&lt;&#x2F;code&gt; (i.e., above 127), special treatment is done (&lt;a href=&quot;https:&#x2F;&#x2F;www.johndcook.com&#x2F;blog&#x2F;2019&#x2F;09&#x2F;09&#x2F;how-utf-8-works&#x2F;&quot;&gt;reference&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Control characters (e.g. newline, language specifiers etc.) which are not naturally displayed also exist&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;UTF-16 and UTF-32&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Minimum byte size differs&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;python-strings&quot;&gt;Python Strings&lt;&#x2F;h2&gt;
&lt;p&gt;As mentioned above, Python 3 strings are unicode by default so the backslash &lt;code&gt;\&lt;&#x2F;code&gt; has special meanings to signify special characters (e.g. &lt;code&gt;\s&lt;&#x2F;code&gt;, &lt;code&gt;\x&lt;&#x2F;code&gt;, &lt;code&gt;\u&lt;&#x2F;code&gt;, &lt;code&gt;\n&lt;&#x2F;code&gt;, &lt;code&gt;\t&lt;&#x2F;code&gt;, etc.). To store a backslash in a strin variable, you need to repeat every backslash (i.e. &lt;code&gt;v = &amp;quot;\\\\&amp;quot;&lt;&#x2F;code&gt; stores &lt;code&gt;0x5c5c&lt;&#x2F;code&gt; to &lt;code&gt;v&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;raw-string&quot;&gt;Raw String&lt;&#x2F;h3&gt;
&lt;p&gt;To avoid treating the backslash chracter specially and avoid going down the backslash rabbit hole, you can use raw strings &lt;code&gt;v = r&amp;quot;\s&amp;quot;&lt;&#x2F;code&gt; will store &lt;code&gt;0x5c73&lt;&#x2F;code&gt; to &lt;code&gt;v&lt;&#x2F;code&gt; instead of &lt;code&gt;0x20&lt;&#x2F;code&gt;. This is especially useful in RegEx expressions.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;byte-string-literal&quot;&gt;Byte String &#x2F; Literal&lt;&#x2F;h3&gt;
&lt;p&gt;You might also have seen the syntax &lt;code&gt;b&#x27;\x41&#x27;&lt;&#x2F;code&gt; or &lt;code&gt;b&#x27;\u0041&#x27;&lt;&#x2F;code&gt;. These are byte literals which represents a byte array using strings according to the &lt;a href=&quot;https:&#x2F;&#x2F;www.python.org&#x2F;dev&#x2F;peps&#x2F;pep-3112&#x2F;&quot;&gt;PEP standard syntax&lt;&#x2F;a&gt;. The return value is of type &lt;code&gt;byte&lt;&#x2F;code&gt; instead of &lt;code&gt;str&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-terminal&quot;&gt;The Terminal&lt;&#x2F;h2&gt;
&lt;p&gt;Have you also ever wondered how does Python know what encoding to use when printing strings to the terminal? As we all know, the Linux kernel only allows new processes to be created by spawning or forking from an existing process. Hence, the python process will be a child of the terminal process and environment variables are inherited. The Python interpreter can figure out the desired encoding using &lt;code&gt;$LANG&lt;&#x2F;code&gt; ot &lt;code&gt;$LC_CTYPE&lt;&#x2F;code&gt; . &lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Environment Variables&lt;&#x2F;strong&gt;
Environment variables are stored in a virtual file &lt;code&gt;&#x2F;proc&#x2F;pid&#x2F;environ&lt;&#x2F;code&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;532155&#x2F;linux-where-are-environment-variables-stored&quot;&gt;reference&lt;&#x2F;a&gt;). But it can also be set and retrieved via the kernel (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;man7.org&#x2F;linux&#x2F;man-pages&#x2F;man3&#x2F;putenv.3.html&quot;&gt;putenv&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Python</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/python/python/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/python/python/</id>
		<content type="html">&lt;h2 id=&quot;below-the-hoods&quot;&gt;Below the Hoods&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;docs&#x2F;programming&#x2F;python&#x2F;python-imports&quot;&gt;Python Imports&lt;&#x2F;a&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;zecong.hu&#x2F;2019&#x2F;08&#x2F;10&#x2F;inheritance-for-namedtuples&#x2F;&quot;&gt;Named Tuples&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tricks&quot;&gt;Tricks&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;super outside class&lt;&#x2F;li&gt;
&lt;li&gt;lru_cache&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mail.python.org&#x2F;pipermail&#x2F;python-ideas&#x2F;2012-May&#x2F;014969.html&quot;&gt;module as class&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;2447353&#x2F;getattr-on-a-module&#x2F;7668273#7668273&quot;&gt;also&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;muting imported library tqdm&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;lungmask &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;mask, utils
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;nop&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;item&lt;&#x2F;span&gt;&lt;span&gt;: Any, *&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;: Any, **&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;__&lt;&#x2F;span&gt;&lt;span&gt;: Any) -&amp;gt; Any:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;NOP function overload to silent imported libraries.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;item
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Make lungmask tqdm quiet
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;mask.tqdm = nop
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;utils.tqdm = nop
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;concepts&quot;&gt;Concepts&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;docs&#x2F;programming&#x2F;python&#x2F;python-strings&quot;&gt;Python Strings&lt;&#x2F;a&gt;
&lt;a href=&quot;&#x2F;docs&#x2F;programming&#x2F;python&#x2F;python-regex&quot;&gt;Python RegEx&lt;&#x2F;a&gt;
&lt;a href=&quot;&#x2F;docs&#x2F;programming&#x2F;regex-cheatsheet&quot;&gt;RegEx Cheatsheet&lt;&#x2F;a&gt;
&lt;a href=&quot;&#x2F;docs&#x2F;programming&#x2F;python&#x2F;python-advanced-typings&quot;&gt;Python Advanced Typings&lt;&#x2F;a&gt;
todo: python string types e.g. r&#x27;&#x27;, b&#x27;&#x27;, u&#x27;&#x27;
Context Manager from Generator&lt;&#x2F;p&gt;
&lt;h3 id=&quot;python-utils&quot;&gt;Python Utils&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;listify, stringify, tuplify (type hint up to length 10??)&lt;&#x2F;li&gt;
&lt;li&gt;Pytorch &lt;code&gt;__call__&lt;&#x2F;code&gt; type hint&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Argument Parsing: https:&#x2F;&#x2F;github.com&#x2F;lebrice&#x2F;SimpleParsing&lt;&#x2F;p&gt;
&lt;p&gt;Inherited Dicts
https:&#x2F;&#x2F;treyhunner.com&#x2F;2019&#x2F;04&#x2F;why-you-shouldnt-inherit-from-list-and-dict-in-python&#x2F;
https:&#x2F;&#x2F;chriswarrick.com&#x2F;blog&#x2F;2018&#x2F;09&#x2F;20&#x2F;python-hackery-merging-signatures-of-two-python-functions&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.kaggle.com&#x2F;rohanrao&#x2F;tutorial-on-reading-large-datasets&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;bergvca.github.io&#x2F;2017&#x2F;10&#x2F;14&#x2F;super-fast-string-matching.html&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.sympy.org&#x2F;scipy-2017-codegen-tutorial&#x2F;notebooks&#x2F;20-ordinary-differential-equations.html&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;dev.to&#x2F;meseta&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Pytorch Notes</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/python/pytorch-notes/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/python/pytorch-notes/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;52920098&#x2F;what-does-the-underscore-suffix-in-pytorch-functions-mean&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;wanghui-garcia&#x2F;p&#x2F;10677071.html&lt;&#x2F;li&gt;
&lt;li&gt;Pytorch unbind, lerp&lt;&#x2F;li&gt;
&lt;li&gt;autograd.grad, retain graph&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fossies.org&#x2F;linux&#x2F;pytorch&#x2F;aten&#x2F;src&#x2F;ATen&#x2F;native&#x2F;cudnn&#x2F;ConvShared.cpp&quot;&gt;torch._C jit&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;theaisummer.com&#x2F;weights-and-biases-tutorial&#x2F;&quot;&gt;weight and biases&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;optimize-pytorch-performance-for-speed-and-memory-efficiency-2022-84f453916ea6&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;discuss.pytorch.org&#x2F;t&#x2F;clone-and-detach-in-v0-4-0&#x2F;16861&#x2F;33&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>VSCode DevContainers</title>
		<published>2022-08-02T02:41:06.387252+00:00</published>
		<updated>2022-08-02T02:41:06.387252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/vscode-devcontainers/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/vscode-devcontainers/</id>
		<content type="html">&lt;h1 id=&quot;tips&quot;&gt;Tips&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;localEnv&lt;&#x2F;code&gt;: use &lt;code&gt;.zshrc&lt;&#x2F;code&gt;, for &lt;code&gt;bash&lt;&#x2F;code&gt;, try &lt;code&gt;.profile&lt;&#x2F;code&gt;, &lt;code&gt;.bash_profile&lt;&#x2F;code&gt; and &lt;code&gt;.bashrc&lt;&#x2F;code&gt; till it works. Use &lt;code&gt;.zshrc&lt;&#x2F;code&gt; if you redirects you bash shell to zsh (e.g. if you are non-root but installed a zsh binary in your user home directory and uses bashrc to redirect the shella zsh binary in your user home directory and uses bashrc to redirec)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Adam</title>
		<published>2022-08-02T02:41:06.383251+00:00</published>
		<updated>2022-08-02T02:41:06.383251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/adam/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/adam/</id>
		<content type="html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h1&gt;
&lt;p&gt;Adam (Adaptive Moment Estimation) is an adaptive learning rate optimization algorithm published in &lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1412.6980.pdf&quot;&gt;ICLR 2015&lt;&#x2F;a&gt;. It combines the concepts behind &lt;em&gt;RMSProp&lt;&#x2F;em&gt; and &lt;em&gt;SGD with momentum&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;maths&quot;&gt;Maths&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;moving-averages&quot;&gt;Moving averages&lt;&#x2F;h2&gt;
&lt;p&gt;$m_t$ is moving average of gradient
$v_t$ is moving average of squared gradient (i.e. uncentered variance)
$\beta_1$ and $\beta_2$ are set to 0.9 and 0.999. No one ever changes them.
$$
\begin{align}
m_t &amp;amp;= \beta_1m_{t-1} + (1-\beta_1)g_t \\v_t &amp;amp;= \beta_2v_{t-1} + (1-\beta_2)g_t^2
\end{align}
$$&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update-rule&quot;&gt;Update rule&lt;&#x2F;h2&gt;
&lt;p&gt;We set the quantities $\hat{m_t}$ and  $\hat{v_t}$ as follows:
$$
\begin{align}
\hat{m_t} &amp;amp;= \frac{\hat{m_t}}{1-\beta_1^t} \\\hat{v_t} &amp;amp;= \frac{\hat{v_t}}{1-\beta_2^t}
\end{align}
$$&lt;&#x2F;p&gt;
&lt;p&gt;such that:&lt;&#x2F;p&gt;
&lt;p&gt;$$
\begin{align}
E[\hat{m_t}] &amp;amp;= E[g_t] \\E[\hat{v_t}] &amp;amp;= E[g_t^2]
\end{align}
$$&lt;&#x2F;p&gt;
&lt;p&gt;So the gradient update rule becomes:
$$
w_t = w_{t-1} - \eta \frac{\hat{m_t}}{\sqrt{\hat{v_t}} + \epsilon}
$$&lt;&#x2F;p&gt;
&lt;h2 id=&quot;consequences&quot;&gt;Consequences&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;Learning rate is limited to between 0 and $\eta$ (by &lt;em&gt;Cauchy–Schwarz Inequality&lt;&#x2F;em&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Smaller variance (e.g. all values near mean) means higher update step&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;design-choices&quot;&gt;Design Choices&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;Why is the uncentered variance used?&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We do not have access to the mean global gradient (across all batches &#x2F; timesteps) but we can safely assume it to be zero.&lt;&#x2F;li&gt;
&lt;li&gt;The variance term in Adam has the same expectation as the uncentered variance of the global variance (or centered assuming 0 mean gradient)
vt: given historical gradients and assume global mean 0, what is expected variance (for current step, or any step cuz i.i.d.)
mt: what is expected gradient mean (for current step, or any step cuz i.i.d.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;dividing them is liek sharp ratio, how much to believe in current mean estimate&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Equalized Learning Rate</title>
		<published>2022-08-02T02:41:06.383251+00:00</published>
		<updated>2022-08-02T02:41:06.383251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/equalized-learning-rate/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/equalized-learning-rate/</id>
		<content type="html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h1&gt;
&lt;p&gt;Equalized Learning Rate is a concept introduced in &lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;progan&quot;&gt;ProGAN&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We deviate from the current trend of careful weight initialization, and instead use a trivial N(0, 1) initialization and then explicitly scale the weights at runtime. To be precise, we set wˆi = wi&#x2F;c, where wi are the weights and c is the per-layer normalization constant from He’s initializer (He et al., 2015). The benefit of doing this dynamically instead of during initialization is somewhat subtle, and relates to the scale-invariance in commonly used adaptive stochastic gradient descent methods such as RMSProp (Tieleman &amp;amp; Hinton, 2012) and Adam (Kingma &amp;amp; Ba, 2015). These methods normalize a gradient update by its estimated standard deviation, thus making the update independent of the scale of the parameter. As a result, if some parameters have a larger dynamic range than others, they will take longer to adjust. This is a scenario modern initializers cause, and thus it is possible that a learning rate is both too large and too small at the same time. Our approach ensures that the dynamic range, and thus the learning speed, is the same for all weights. A similar reasoning was independently used by van Laarhoven (2017).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Modern optimizers such as the &lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;adam&quot;&gt;Deep Learning&#x2F;Adam&lt;&#x2F;a&gt; optimzer limit gradient update step sizes. However, in GANs, different parameters have vastly different dynamic ranges (i.e. the range of values). In order to equalize the learning rate between different parameters, we divide the parameters by its fan-in (i.e. estimated standard deviation) during runtime.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;update-rule&quot;&gt;Update rule&lt;&#x2F;h2&gt;
&lt;p&gt;We set the quantities $\hat{m_t}$ and  $\hat{v_t}$ as follows:
$$
\begin{align}
\hat{m_t} &amp;amp;= \frac{\hat{m_t}}{1-\beta_1^t} \\\hat{v_t} &amp;amp;= \frac{\hat{v_t}}{1-\beta_2^t}
\end{align}
$$&lt;&#x2F;p&gt;
&lt;p&gt;such that:&lt;&#x2F;p&gt;
&lt;p&gt;$$
\begin{align}
E[\hat{m_t}] &amp;amp;= E[g_t] \\E[\hat{v_t}] &amp;amp;= E[g_t^2]
\end{align}
$$&lt;&#x2F;p&gt;
&lt;p&gt;So the gradient update rule becomes:
$$
w_t = w_{t-1} - \eta \frac{\hat{m_t}}{\sqrt{\hat{v_t}} + \epsilon}
$$&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=XwUTJhKRVl8&amp;amp;feature=emb_title&quot;&gt;&lt;em&gt;Reference video&lt;&#x2F;em&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Note that StyleGAN2 code ignored the root 2 factor in their scaling factor because it was cancelled with the subsequent summing with bias term. Smart pants.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>GAN Quality Metrics</title>
		<published>2022-08-02T02:41:06.383251+00:00</published>
		<updated>2022-08-02T02:41:06.383251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/gan-quality-metrics/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/gan-quality-metrics/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;improved-precision-and-recall-metric-for-assessing-generative-models&quot;&gt;Improved Precision and Recall Metric for Assessing Generative Models&lt;&#x2F;a&gt; (2019)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;proceedings.neurips.cc&#x2F;paper&#x2F;2019&#x2F;file&#x2F;fcf55a303b71b84d326fb1d06e332a26-Paper.pdf&quot;&gt;Classification Accuracy Score&lt;&#x2F;a&gt; (2019), used &lt;a href=&quot;https:&#x2F;&#x2F;proceedings.neurips.cc&#x2F;paper&#x2F;2019&#x2F;file&#x2F;5f8e2fa1718d1bbcadf1cd9c7a54fb8c-Paper.pdf&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;proceedings.mlr.press&#x2F;v119&#x2F;naeem20a&#x2F;naeem20a.pdf&quot;&gt;Reliable Fidelity and Diversity Metrics for Generative Models&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Papers To Read</title>
		<published>2022-08-02T02:41:06.383251+00:00</published>
		<updated>2022-08-02T02:41:06.383251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/papers-to-read/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/papers-to-read/</id>
		<content type="html">&lt;h2 id=&quot;by-year&quot;&gt;By Year&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;2021&quot;&gt;2021&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;5-exciting-deep-learning-advancements-to-keep-your-eye-on-in-2021-6f6a9b6d2406&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;louisfb01&#x2F;best_AI_papers_2021&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;odsc.medium.com&#x2F;best-deep-learning-research-of-2021-so-far-92631628ac78&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;2020&quot;&gt;2020&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;louisfb01&#x2F;Best_AI_paper_2020&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;2019&quot;&gt;2019&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;analyticsindiamag.com&#x2F;best-machine-learning-papers-2019-nips-icml-ai&#x2F;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;list&quot;&gt;List&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Old is Gold: https:&#x2F;&#x2F;github.com&#x2F;terryum&#x2F;awesome-deep-learning-papers&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;patrick-llgc&#x2F;Learning-Deep-Learning&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2103.10492.pdf&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;review-fpn-feature-pyramid-network-object-detection-262fc7482610&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Conceptual Questions</title>
		<published>2022-08-02T02:41:06.383251+00:00</published>
		<updated>2022-08-02T02:41:06.383251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/maths/conceptual-questions/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/maths/conceptual-questions/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;math.stackexchange.com&#x2F;questions&#x2F;1762147&#x2F;why-do-we-study-real-numbers&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;math.stackexchange.com&#x2F;questions&#x2F;2117491&#x2F;what-is-a-homomorphism-and-what-does-structure-preserving-mean&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Cpp Deep Dive</title>
		<published>2022-08-02T02:41:06.383251+00:00</published>
		<updated>2022-08-02T02:41:06.383251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/cpp-deep-dive/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/cpp-deep-dive/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;Intangible-pg18&#x2F;Cpp-Deep-Dive#buffer--streams&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;2425728&#x2F;delete-vs-delete-operators-in-c&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;7315936&#x2F;which-of-sprintf-snprintf-is-more-secure&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;thoughtbot.com&#x2F;blog&#x2F;the-magic-behind-configure-make-make-install&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;blog.usejournal.com&#x2F;compiler-assembler-linker-and-loader-b0e57a85523c&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;cpp&#x2F;intrinsics&#x2F;compiler-intrinsics?view=msvc-160&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Custom CUDA Or Autograd Functions In Pytorch😃😃</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/custom-cuda-or-autograd-functions-in-pytorch/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/custom-cuda-or-autograd-functions-in-pytorch/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;Why we have double backward: higher derivatives (https:&#x2F;&#x2F;pytorch.org&#x2F;tutorials&#x2F;intermediate&#x2F;custom_function_double_backward_tutorial.html)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Improved Precision And Recall Metric For Assessing Generative Models</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/improved-precision-and-recall-metric-for-assessing-generative-models/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/improved-precision-and-recall-metric-for-assessing-generative-models/</id>
		<content type="html">&lt;h1 id=&quot;concepts&quot;&gt;Concepts&lt;&#x2F;h1&gt;
&lt;ol&gt;
&lt;li&gt;Precision and Recall
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;gan-precision-and-recall.png&quot; alt=&quot;GAN Precision and Recall.png&quot; &#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1806.00035.pdf&quot;&gt;Assessing Generative Models via Precision and Recall&lt;&#x2F;a&gt; (2018)&lt;&#x2F;li&gt;
&lt;li&gt;Cannot estimate extrema due to reliance on relative probability densities (e.g. cannot interpret high density regions by mode collapse &#x2F; truncation correctly)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1610.06545.pdf&quot;&gt;Revisiting Classifier Two-Sample Tests&lt;&#x2F;a&gt; (2017)
&lt;ul&gt;
&lt;li&gt;Use binary classifier (DNN, or just KNN) to perform two-sample test &#x2F; evaluate distribution between generated and real data distributions&lt;&#x2F;li&gt;
&lt;li&gt;Also cannot deal with mode collapse&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Approximating Manifold using k nearest neighbours
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;gan-knn-manifold-approximation.png&quot; alt=&quot;GAN knn manifold approximation.png&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;knn-precision-recall.png&quot; alt=&quot;knn precision recall.png&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Pareto frontiers
&lt;ul&gt;
&lt;li&gt;Do not make assumptions &#x2F; explicit preference in multi-objective optimization (precision vs recall) &lt;a href=&quot;&#x2F;docs&#x2F;maths&#x2F;multiobjective-optimization&quot;&gt;Multiobjective Optimization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Using snapshots during training&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h1 id=&quot;results&quot;&gt;Results&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;stylegan-alterations-black-dots-are-lowest-fid&quot;&gt;StyleGAN alterations (black dots are lowest FID)&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;stylegan-precision-recall.png&quot; alt=&quot;stylegan precision recall.png&quot; &#x2F;&gt;
A: original StyleGAN1
B: no minibatch std -&amp;gt; less variation
C: also less R1 discriminator regularization -&amp;gt; less variation
D: no progressive growing -&amp;gt; hurts FID
E: randomly translates output image before passing to discriminator -&amp;gt; better precision
F: no instance normalization -&amp;gt; more variety and better FID (lol somehow, but style mixing probably does not work)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;realism-score&quot;&gt;Realism score&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;stylegan-realism-score.png&quot; alt=&quot;stylegan realism score.png&quot; &#x2F;&gt;
truncation performed by only retraining hyperspheres with radii below median to perform over-conservative estimate (pruning prevents having very wrong scores for generated samples that fall in underrepresented samples where radii are overly loose)&lt;&#x2F;p&gt;
&lt;p&gt;R &amp;gt;= 1 means generated sample falls in real distribution&lt;&#x2F;p&gt;
&lt;h2 id=&quot;evaluate-interpolations&quot;&gt;Evaluate Interpolations&lt;&#x2F;h2&gt;
&lt;p&gt;Do linear interpolation on StyleGAN latent space and investigate realism score&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Normalization Techniques</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/normalization-techniques/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/normalization-techniques/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;its-necessary-to-combine-batch-norm-and-skip-connections-e92210ca04da&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Pixel2Style2Pixel</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/pixel2style2pixel/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/pixel2style2pixel/</id>
		<content type="html">&lt;p&gt;The pSp model uses a &lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1610.02915.pdf&quot;&gt;ResNet&lt;&#x2F;a&gt; backbone to construct a feature pyramid which would then pass through a series of mapping CNNs to generate latent vectors in the w+ space.&lt;&#x2F;p&gt;
&lt;p&gt;The ResNet backbone used in the pSp model is a mess (seriously can&#x27;t people just clean up their own code before they publish a paper??!). The pSp ResNet implementation is copied (without modification) from a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TreB1eN&#x2F;InsightFace_Pytorch&quot;&gt;guy&lt;&#x2F;a&gt;&#x27;&#x27;s implementation of the &lt;a href=&quot;https:&#x2F;&#x2F;openaccess.thecvf.com&#x2F;content_CVPR_2019&#x2F;papers&#x2F;Deng_ArcFace_Additive_Angular_Margin_Loss_for_Deep_Face_Recognition_CVPR_2019_paper.pdf&quot;&gt;Arcface&lt;&#x2F;a&gt; ResNet. But that funny guy apparently did not follow the original &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deepinsight&#x2F;insightface&#x2F;blob&#x2F;master&#x2F;recognition&#x2F;arcface_mxnet&#x2F;symbol&#x2F;fresnet.py&quot;&gt;implementation&lt;&#x2F;a&gt; of the Arcface paper (in MXNet, another regrettable life decision I guess). And that TreB1eN guy did not bother to explain the differences (I would guess its more like an uncorrected mistake) as seen &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TreB1eN&#x2F;InsightFace_Pytorch&#x2F;issues&#x2F;37&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Shortcut of maxpool taken from here? (https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;2004.04989.pdf)&lt;&#x2F;p&gt;
&lt;p&gt;pSp =&amp;gt; ArcFace =&amp;gt; CosFace =&amp;gt; SphereFace
(interesting, maybe this embedding can be used to detect different CXR identities?)&lt;&#x2F;p&gt;
&lt;p&gt;See SphereFace Table 2 (https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1704.08063.pdf). That&#x27;s where the CNN architecture was taken from (i.e. different from native ResNet), not using bottleneck. All different implementations shown here (https:&#x2F;&#x2F;github.com&#x2F;ronghuaiyang&#x2F;arcface-pytorch&#x2F;blob&#x2F;master&#x2F;models&#x2F;resnet.py), ResNet 34 (no bottleneck) vs ResNet 50+ (bottlenect) vs Face-ResNet (no-bottleneck, PReLU). Not sure where the PReLU came from (came from SpherFace).&lt;&#x2F;p&gt;
&lt;p&gt;From SphereFace github (https:&#x2F;&#x2F;github.com&#x2F;wy1iu&#x2F;sphereface&#x2F;search?p=2&amp;amp;q=prelu):
In SphereFace, our network architecures use residual units as building blocks, but are quite different from the standrad ResNets (e.g., BatchNorm is not used, the prelu replaces the relu, different initializations, etc). We proposed 4-layer, 20-layer, 36-layer and 64-layer architectures for face recognition (details can be found in the [paper]&lt;&#x2F;p&gt;
&lt;p&gt;[3, 4, 14, 3] came from ArcFace MXNet https:&#x2F;&#x2F;github.com&#x2F;deepinsight&#x2F;insightface&#x2F;blob&#x2F;8b79096e70a10a4899f1ce59882ea4d56e634d40&#x2F;recognition&#x2F;arcface_mxnet&#x2F;symbol&#x2F;fresnet.py#L1175, which did not follow here https:&#x2F;&#x2F;github.com&#x2F;tornadomeet&#x2F;ResNet&#x2F;blob&#x2F;master&#x2F;train_resnet.py. Oh, cuz original ResNet has 3-layer bottleneck for ResNet50 onwards, so [3, 4, 6, 3] means 50 layers. But ArcFace uses 2-layer block without bottlenect, so need [3, 4, 14, 3] following the convention (with reason?) to put more layers in conv4_x&lt;&#x2F;p&gt;
&lt;p&gt;So, I guess I will implement my own ResNet...&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;evolution-of-deep-cnn.png&quot; alt=&quot;evolution of deep cnn.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;evolution-of-deep-cnn-2.png&quot; alt=&quot;evolution of deep cnn 2.png&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;evolution-of-deep-cnn-3.png&quot; alt=&quot;evolution of deep cnn 3.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;evolution-of-deep-cnn-4.png&quot; alt=&quot;evolution of deep cnn 4.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;CNN Techniques and Architectural Breakthroughs&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;arxiv.org&#x2F;ftp&#x2F;arxiv&#x2F;papers&#x2F;1901&#x2F;1901.06032.pdf&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;from-lenet-to-efficientnet-the-evolution-of-cnns-3a57eb34672f&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;medium.com&#x2F;@neuralnets&#x2F;swish-activation-function-by-google-53e1ea86f820&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.aismartz.com&#x2F;blog&#x2F;cnn-architectures&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;theaisummer.com&#x2F;cnn-architectures&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;analyticsindiamag.com&#x2F;how-the-deep-learning-approach-for-object-detection-evolved-over-the-years&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ProGAN</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/progan/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/progan/</id>
		<content type="html">&lt;p&gt;Paper: &lt;a href=&quot;&#x2F;docs&#x2F;attachments&#x2F;progressive-gan.pdf&quot;&gt;Progressive GAN.pdf&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>StyleGAN</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/stylegan/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/stylegan/</id>
		<content type="html">&lt;p&gt;Concepts:
&lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;equalized-learning-rate&quot;&gt;Equalized Learning Rate&lt;&#x2F;a&gt;
&lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;weight-initialization&quot;&gt;Weight Initialization&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Reference:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Not used in StyleGAN2 paper: &lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;gan-quality-metrics&quot;&gt;GAN Quality Metrics&lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;improved-precision-and-recall-metric-for-assessing-generative-models&quot;&gt;Improved Precision and Recall Metric for Assessing Generative Models&lt;&#x2F;a&gt; (StyleGAN2)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If we were willing to sacrifice scale-specific controls (see video), we could simply remove the normalization, thus removing the artifacts and also improving FID slightly&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Weight Normalization (StyleGAN2)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1704.03971.pdf&quot;&gt;On the Effects of Batch and Weight Normalization in Generative Adversarial Networks&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1602.07868.pdf&quot;&gt;Weight Normalization: A Simple Reparameterization to Accelerate Training of Deep Neural Networks&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Our demodulation is also related to weight normalization [37] that performs the same calculation as a part of  reparameterizing the weight tensor. Prior work has identified weight normalization as beneficial in the context of  GAN training [43].&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Trainig
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;l4rz&#x2F;practical-aspects-of-stylegan2-training&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Weight Initialization</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/weight-initialization/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/weight-initialization/</id>
		<content type="html">&lt;h2 id=&quot;a-note-to-self&quot;&gt;A note to self&lt;&#x2F;h2&gt;
&lt;p&gt;When designing a deep learning architecture, the statistical properties of the propagating is an important consideration to take note of. &lt;&#x2F;p&gt;
&lt;p&gt;With proper initialization, one can ensure that variance is conserved in the forward &#x2F; backward pass (you gotta choose one cuz they propagate differently) when the network was first initialized. The concept of &lt;a href=&quot;&#x2F;docs&#x2F;deep-learning&#x2F;equalized-learning-rate&quot;&gt;Equalized Learning Rate&lt;&#x2F;a&gt; preserves the variance in runtime and hence makes weight initialization not as important.&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;weight-initialization-in-neural-networks-a-journey-from-the-basics-to-kaiming-954fb9b47c79&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xavier-initialization&quot;&gt;Xavier Initialization&lt;&#x2F;h2&gt;
&lt;p&gt;http:&#x2F;&#x2F;proceedings.mlr.press&#x2F;v9&#x2F;glorot10a&#x2F;glorot10a.pdf&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Used for tanh&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;https:&#x2F;&#x2F;cs230.stanford.edu&#x2F;section&#x2F;4&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;$$W_{i,j}^{[l]}=\mathcal{N}(0,\frac{1}{n^{[l-1]}})$$
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;xavier-initialization.png&quot; alt=&quot;xavier initialization.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;towardsdatascience.com&#x2F;weight-initialization-in-neural-networks-a-journey-from-the-basics-to-kaiming-954fb9b47c79
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;xavier-initialization-2.png&quot; alt=&quot;xavier initialization 2.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I guess both preserves the variance (you have xavier_uniform_ and xavier_normal_ in Pytorch)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kaiming-he-initialization&quot;&gt;Kaiming He Initialization&lt;&#x2F;h2&gt;
&lt;p&gt;Since ReLU does not have mean zero, we need some adjustments&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;kaiming-he-initialization.png&quot; alt=&quot;kaiming he initialization.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Proof: https:&#x2F;&#x2F;medium.com&#x2F;@shoray.goel&#x2F;kaiming-he-initialization-a8d9ed0b5899&lt;&#x2F;p&gt;
&lt;h2 id=&quot;does-gain-matter&quot;&gt;Does Gain matter?&lt;&#x2F;h2&gt;
&lt;p&gt;https:&#x2F;&#x2F;jamesmccaffrey.wordpress.com&#x2F;2020&#x2F;11&#x2F;20&#x2F;the-gain-parameter-for-the-pytorch-xavier_uniform_-and-xavier_normal_-initialization-functions&#x2F;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bias-term&quot;&gt;Bias Term&lt;&#x2F;h2&gt;
&lt;p&gt;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;44883861&#x2F;initial-bias-values-for-a-neural-network&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Allwinner D1s</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/allwinner-d1s/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/allwinner-d1s/</id>
		<content type="html">&lt;p&gt;Also: MangoPi MQ&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bbs.aw-ol.com&#x2F;topic&#x2F;911&#x2F;%E9%BA%BB%E9%9B%80d1s%E5%BC%80%E5%8F%91%E6%9D%BF%E6%94%AF%E6%8C%81buildroot-%E4%B8%80%E4%BB%B6%E6%9E%84%E5%BB%BA%E4%BA%86?_=1643550933035&amp;amp;lang=en-GB&quot;&gt;buildroot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lvgl.io&#x2F;&quot;&gt;lvgl&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mangopi-sbc&#x2F;MQ&quot;&gt;GitHub&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Antenna On PCB</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/antenna-on-pcb/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/antenna-on-pcb/</id>
		<content type="html">&lt;h2 id=&quot;project-overview&quot;&gt;Project Overview&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;I am going to create a simple, WiFi-enabled &lt;a href=&quot;&#x2F;docs&#x2F;embedded-systems&#x2F;esp32-c3&quot;&gt;ESP32-C3&lt;&#x2F;a&gt; board with the reference design taken from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;makermoekoe&#x2F;Picoclick-C3&quot;&gt;Picoclick-C3&lt;&#x2F;a&gt;. The PCB Layout is shown below:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;picoclick-c3.png&quot; alt=&quot;picoclick-c3.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;reference-links&quot;&gt;Reference Links&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ti.com&#x2F;lit&#x2F;an&#x2F;slyt296&#x2F;slyt296.pdf?ts=1649533719973&amp;amp;ref_url=https%253A%252F%252Fwww.google.com%252F&quot;&gt;Choosing Antennas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.mouser.co.id&#x2F;pdfDocs&#x2F;ceramicchipantennasvspcbtraceantennasacomparison.pdf&quot;&gt;Ceramic Chip Antennas vs PCB Antennas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.infineon.com&#x2F;dgdl&#x2F;Infineon-AN91445_Antenna_Design_and_RF_Layout_Guidelines-ApplicationNotes-v09_00-EN.pdf?fileId=8ac78c8c7cdc391c017d073e054f6227&amp;amp;utm_source=cypress&amp;amp;utm_medium=referral&amp;amp;utm_campaign=202110_globe_en_all_integration-application_note&quot;&gt;Antenna Design and RF Layout Guidelines&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;resources.system-analysis.cadence.com&#x2F;blog&#x2F;msa2020-rf-antenna-design-and-layout-tips-for-your-pcb&quot;&gt;RF Antenna Design and Layout Tips&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;electronics.stackexchange.com&#x2F;questions&#x2F;41871&#x2F;via-fences-for-noise-reduction-of-a-chip-antenna&quot;&gt;Via fences for noise reduction of a chip antenna&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.lairdconnect.com&#x2F;resources&#x2F;white-papers&#x2F;how-to-implement-chip-antennas&quot;&gt;How to Properly Implement Chip Antennas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.thingsquare.com&#x2F;blog&#x2F;articles&#x2F;iot-antenna-design-challenges&#x2F;&quot;&gt;Three Ways Your Antenna Deceives You&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;electronics.stackexchange.com&#x2F;questions&#x2F;390441&#x2F;pi-matching-network-needed-when-already-50ohm-matched-on-transceiver&quot;&gt;Pi-Matching network needed when already 50Ohm matched on transceiver?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZaXm6wau-jc&amp;amp;list=WL&amp;amp;index=2&quot;&gt;How does an Antenna Work?&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QsXRhnWI6Co&amp;amp;list=WL&amp;amp;index=3&amp;amp;t=1171s&quot;&gt;Impedance Matching Networks&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Chips</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/chips/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/chips/</id>
		<content type="html">&lt;h1 id=&quot;mcus&quot;&gt;MCUs&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;arduino-substitute-lgt8fx8p&quot;&gt;Arduino Substitute (LGT8FX8P)&lt;&#x2F;h2&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;dbuezas&#x2F;lgt8fx&lt;&#x2F;p&gt;
&lt;h1 id=&quot;motor-drivers&quot;&gt;Motor Drivers&lt;&#x2F;h1&gt;
&lt;p&gt;https:&#x2F;&#x2F;datasheet.lcsc.com&#x2F;szlcsc&#x2F;2003021206_TRINAMIC-Motion-Control-GmbH-TMC4671-LA_C465954.pdf&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ESP32-C3</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/esp32-c3/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/esp32-c3/</id>
		<content type="html">&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;p&gt;I love RISC-V. Maybe cuz I worked on it for a long time during my internship at Huawei and I sort of know the instruction set inside out. I want to make a board using the ESP32-C3, cuz its cheap.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;documents&quot;&gt;Documents&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.espressif.com&#x2F;sites&#x2F;default&#x2F;files&#x2F;documentation&#x2F;esp32-c3_hardware_design_guidelines_en.pdf&quot;&gt;Hardware Design Guidelines&lt;&#x2F;a&gt;: must-have components on the PCB and recommended specs&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.espressif.com&#x2F;sites&#x2F;default&#x2F;files&#x2F;documentation&#x2F;esp32-c3_datasheet_en.pdf&quot;&gt;Datasheet&lt;&#x2F;a&gt;: not much use for an MCU, mostly refer to the pin configurations and numbers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;&#x2F;docs&#x2F;embedded-systems&#x2F;file&#x2F;c&#x2F;users&#x2F;peter&#x2F;downloads&#x2F;esp32-c3-technical-reference-manual-cn.pdf&quot;&gt;Technical Reference Manual&lt;&#x2F;a&gt;: internal workings of the chip, not too important until you need to fiddle with the registers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;minimal-board-setup&quot;&gt;Minimal Board Setup&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;digital-power&quot;&gt;Digital Power&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Use recommended cap values&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;analog-power-supply&quot;&gt;Analog Power Supply&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Use recommended LC filter and caps&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;power-on-sequence&quot;&gt;Power-on sequence&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Use RC delay &#x2F; latch circuit to delay power-on after 3.3V has stabilised&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;clock-crystal&quot;&gt;Clock Crystal&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;10ppm and 40MHz&lt;&#x2F;li&gt;
&lt;li&gt;Capacitor values: https:&#x2F;&#x2F;blog.adafruit.com&#x2F;2012&#x2F;01&#x2F;24&#x2F;choosing-the-right-crystal-and-caps-for-your-design&#x2F;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rf-circuit&quot;&gt;RF Circuit&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;pi-matching is ideal but not compulsory, its just a lower gain mate&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;strapping-bins-i-e-boot-config&quot;&gt;Strapping Bins (i.e. boot config)&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;GPIO 2, 8, 9&lt;&#x2F;li&gt;
&lt;li&gt;just do pull-up or pull-down resistors and jumper wire&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;use-cdc-usb&quot;&gt;Use CDC USB&lt;&#x2F;h2&gt;
&lt;p&gt;Using CDC USB for serial console and programming means you can save the space of a CH340g. Just set your serial console output in ESP-IDF to CDC USB&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ESP32 Hardware Timer Interrupt</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/esp32-hardware-timer-interrupt/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/esp32-hardware-timer-interrupt/</id>
		<content type="html">&lt;p&gt;In ESP32-IDF &amp;lt; v5.0, we can only use the &lt;code&gt;driver&#x2F;timer.h&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-cpp &quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stdio.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stdlib.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;math.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;assert.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;freertos&#x2F;FreeRTOS.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;freertos&#x2F;task.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;freertos&#x2F;queue.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;driver&#x2F;gpio.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;driver&#x2F;dac.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;driver&#x2F;timer.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;esp_log.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;*  The timer ISR has an execution time of 5.5 micro-seconds(us).
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    Therefore, a timer period less than 5.5 us will cause trigger the interrupt watchdog.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    7 us is a safe interval that will not trigger the watchdog. No need to customize it.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;WITH_RELOAD            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;TIMER_INTR_US          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;7 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Execution time of each ISR interval in micro-seconds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;TIMER_DIVIDER          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;16
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;POINT_ARR_LEN          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;200 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Length of points array
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;AMP_DAC                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;255 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Amplitude of DAC voltage. If it&amp;#39;s more than 256 will causes dac_output_voltage() output 0.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;VDD                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3300 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; VDD is 3.3V, 3300mV
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;CONST_PERIOD_2_PI      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;6.2832
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;SEC_TO_MICRO_SEC&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;)    ((x) &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1000 &lt;&#x2F;span&gt;&lt;span&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Convert second to micro-second
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;UNUSED_PARAM           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;__attribute__&lt;&#x2F;span&gt;&lt;span&gt;((unused)) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; A const period parameter which equals 2 * pai, used to calculate raw dac output value.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;TIMER_TICKS            (TIMER_BASE_CLK &#x2F; TIMER_DIVIDER)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; TIMER_BASE_CLK = APB_CLK = 80MHz
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;ALARM_VAL_US           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SEC_TO_MICRO_SEC&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_INTR_US * TIMER_TICKS)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Alarm value in micro-seconds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;OUTPUT_POINT_NUM       (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1000000 &lt;&#x2F;span&gt;&lt;span&gt;&#x2F; (TIMER_INTR_US * FREQ) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The number of output wave points.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;DAC_CHAN               CONFIG_EXAMPLE_DAC_CHANNEL           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; DAC_CHANNEL_1 (GPIO25) by default
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;FREQ                   CONFIG_EXAMPLE_WAVE_FREQUENCY        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; 3kHz by default
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_Static_assert&lt;&#x2F;span&gt;&lt;span&gt;(OUTPUT_POINT_NUM &amp;lt;= POINT_ARR_LEN, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;The CONFIG_EXAMPLE_WAVE_FREQUENCY is too low and using too long buffer.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static int&lt;&#x2F;span&gt;&lt;span&gt; raw_val[POINT_ARR_LEN];                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Used to store raw values
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static int&lt;&#x2F;span&gt;&lt;span&gt; volt_val[POINT_ARR_LEN];                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Used to store voltage values(in mV)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static const char &lt;&#x2F;span&gt;&lt;span&gt;*TAG = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wave_gen&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static int&lt;&#x2F;span&gt;&lt;span&gt; g_index = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* Timer interrupt service routine *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void&lt;&#x2F;span&gt;&lt;span&gt; IRAM_ATTR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;timer0_ISR&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_group_clr_intr_status_in_isr&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, TIMER_0);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_group_enable_alarm_in_isr&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, TIMER_0);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span&gt;*head = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;*)ptr;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* DAC output ISR has an execution time of 4.4 us*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(g_index &amp;gt;= OUTPUT_POINT_NUM) g_index = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dac_output_voltage&lt;&#x2F;span&gt;&lt;span&gt;(DAC_CHAN, *(head + g_index));
&lt;&#x2F;span&gt;&lt;span&gt;    g_index++;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* Timer group0 TIMER_0 initialization *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;example_timer_init&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_idx&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;bool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;auto_reload&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    esp_err_t ret;
&lt;&#x2F;span&gt;&lt;span&gt;    timer_config_t config = {
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;divider &lt;&#x2F;span&gt;&lt;span&gt;= TIMER_DIVIDER,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;counter_dir &lt;&#x2F;span&gt;&lt;span&gt;= TIMER_COUNT_UP,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;counter_en &lt;&#x2F;span&gt;&lt;span&gt;= TIMER_PAUSE,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;alarm_en &lt;&#x2F;span&gt;&lt;span&gt;= TIMER_ALARM_EN,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;intr_type &lt;&#x2F;span&gt;&lt;span&gt;= TIMER_INTR_LEVEL,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;auto_reload &lt;&#x2F;span&gt;&lt;span&gt;= auto_reload,
&lt;&#x2F;span&gt;&lt;span&gt;    };
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    ret = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_init&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, timer_idx, &amp;amp;config);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(ret);
&lt;&#x2F;span&gt;&lt;span&gt;    ret = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_set_counter_value&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, timer_idx, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0x00000000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;ULL&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(ret);
&lt;&#x2F;span&gt;&lt;span&gt;    ret = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_set_alarm_value&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, timer_idx, ALARM_VAL_US);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(ret);
&lt;&#x2F;span&gt;&lt;span&gt;    ret = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_enable_intr&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, TIMER_0);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(ret);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* Register an ISR handler *&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_isr_register&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, timer_idx, timer0_ISR, (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span&gt;*)raw_val, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;prepare_data&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pnt_num&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_pause&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, TIMER_0);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; i = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; i &amp;lt; pnt_num; i ++) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#ifdef&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SINE
&lt;&#x2F;span&gt;&lt;span&gt;            raw_val[i] = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;( i * CONST_PERIOD_2_PI &#x2F; pnt_num) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) * (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;double&lt;&#x2F;span&gt;&lt;span&gt;)(AMP_DAC)&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_TRIANGLE
&lt;&#x2F;span&gt;&lt;span&gt;            raw_val[i] = (i &amp;gt; (pnt_num&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)) ? (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;* AMP_DAC * (pnt_num - i) &#x2F; pnt_num) : (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;* AMP_DAC * i &#x2F; pnt_num);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SAWTOOTH
&lt;&#x2F;span&gt;&lt;span&gt;            raw_val[i] = (i == pnt_num) ? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;: (i * AMP_DAC &#x2F; pnt_num);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SQUARE
&lt;&#x2F;span&gt;&lt;span&gt;            raw_val[i] = (i &amp;lt; (pnt_num&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)) ? AMP_DAC : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#endif
&lt;&#x2F;span&gt;&lt;span&gt;        volt_val[i] = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)(VDD * raw_val[i] &#x2F; (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;)AMP_DAC);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer_start&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_GROUP_0, TIMER_0);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;log_info&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;DAC output channel: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, DAC_CHAN);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(DAC_CHAN == DAC_CHANNEL_1) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GPIO:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, GPIO_NUM_25);
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GPIO:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, GPIO_NUM_26);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#ifdef&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SINE
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: SINE&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_TRIANGLE
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: TRIANGLE&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SAWTOOTH
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: SAWTOOTH&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SQUARE
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: SQUARE&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#endif
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Frequency(Hz): &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, FREQ);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Output points num: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, OUTPUT_POINT_NUM);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;app_main&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    esp_err_t ret;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;example_timer_init&lt;&#x2F;span&gt;&lt;span&gt;(TIMER_0, WITH_RELOAD);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    ret = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dac_output_enable&lt;&#x2F;span&gt;&lt;span&gt;(DAC_CHAN);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(ret);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;log_info&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    g_index = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;prepare_data&lt;&#x2F;span&gt;&lt;span&gt;(OUTPUT_POINT_NUM);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;while&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;vTaskDelay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#if&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_LOG_VOLTAGE
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(g_index &amp;lt; OUTPUT_POINT_NUM) {
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Output voltage(mV): &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, volt_val[g_index]);
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGD&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;g_index: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, g_index);
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#endif
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After ESP-IDF v5.0:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cpp&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-cpp &quot;&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stdio.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stdlib.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;math.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;assert.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;freertos&#x2F;FreeRTOS.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;freertos&#x2F;task.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;freertos&#x2F;queue.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;driver&#x2F;gpio.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;driver&#x2F;dac.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;driver&#x2F;gptimer.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;esp_log.h&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;*  The timer ISR has an execution time of 5.5 micro-seconds(us).
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    Therefore, a timer period less than 5.5 us will cause trigger the interrupt watchdog.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    7 us is a safe interval that will not trigger the watchdog. No need to customize it.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;TIMER_INTR_US          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;7                                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Execution time of each ISR interval in micro-seconds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;POINT_ARR_LEN          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;200                                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Length of points array
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;AMP_DAC                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;255                                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Amplitude of DAC voltage. If it&amp;#39;s more than 256 will causes dac_output_voltage() output 0.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;VDD                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3300                                 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; VDD is 3.3V, 3300mV
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;CONST_PERIOD_2_PI      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;6.2832
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;DAC_CHAN               CONFIG_EXAMPLE_DAC_CHANNEL           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; DAC_CHANNEL_1 (GPIO25) by default
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;FREQ                   CONFIG_EXAMPLE_WAVE_FREQUENCY        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; 3kHz by default
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#define &lt;&#x2F;span&gt;&lt;span&gt;OUTPUT_POINT_NUM       (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1000000 &lt;&#x2F;span&gt;&lt;span&gt;&#x2F; (TIMER_INTR_US * FREQ) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;)     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The number of output wave points.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_Static_assert&lt;&#x2F;span&gt;&lt;span&gt;(OUTPUT_POINT_NUM &amp;lt;= POINT_ARR_LEN, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;The CONFIG_EXAMPLE_WAVE_FREQUENCY is too low and using too long buffer.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static int&lt;&#x2F;span&gt;&lt;span&gt; raw_val[POINT_ARR_LEN];                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Used to store raw values
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static int&lt;&#x2F;span&gt;&lt;span&gt; volt_val[POINT_ARR_LEN];                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Used to store voltage values(in mV)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static const char &lt;&#x2F;span&gt;&lt;span&gt;*TAG = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wave_gen&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static int&lt;&#x2F;span&gt;&lt;span&gt; g_index = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* Timer interrupt service routine *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static bool&lt;&#x2F;span&gt;&lt;span&gt; IRAM_ATTR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;on_timer_alarm_cb&lt;&#x2F;span&gt;&lt;span&gt;(gptimer_handle_t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timer&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const&lt;&#x2F;span&gt;&lt;span&gt; gptimer_alarm_event_data_t *&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;edata&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;user_data&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span&gt;*head = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span&gt;*)user_data;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;* DAC output ISR has an execution time of 4.4 us*&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(g_index &amp;gt;= OUTPUT_POINT_NUM) {
&lt;&#x2F;span&gt;&lt;span&gt;        g_index = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dac_output_voltage&lt;&#x2F;span&gt;&lt;span&gt;(DAC_CHAN, *(head + g_index));
&lt;&#x2F;span&gt;&lt;span&gt;    g_index++;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;prepare_data&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pnt_num&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; i = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;; i &amp;lt; pnt_num; i ++) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#ifdef&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SINE
&lt;&#x2F;span&gt;&lt;span&gt;        raw_val[i] = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span&gt;( i * CONST_PERIOD_2_PI &#x2F; pnt_num) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) * (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;double&lt;&#x2F;span&gt;&lt;span&gt;)(AMP_DAC) &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_TRIANGLE
&lt;&#x2F;span&gt;&lt;span&gt;        raw_val[i] = (i &amp;gt; (pnt_num &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)) ? (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;* AMP_DAC * (pnt_num - i) &#x2F; pnt_num) : (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;* AMP_DAC * i &#x2F; pnt_num);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SAWTOOTH
&lt;&#x2F;span&gt;&lt;span&gt;        raw_val[i] = (i == pnt_num) ? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;: (i * AMP_DAC &#x2F; pnt_num);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SQUARE
&lt;&#x2F;span&gt;&lt;span&gt;        raw_val[i] = (i &amp;lt; (pnt_num &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)) ? AMP_DAC : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#endif
&lt;&#x2F;span&gt;&lt;span&gt;        volt_val[i] = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;)(VDD * raw_val[i] &#x2F; (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;float&lt;&#x2F;span&gt;&lt;span&gt;)AMP_DAC);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;log_info&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;DAC output channel: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, DAC_CHAN);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(DAC_CHAN == DAC_CHANNEL_1) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GPIO:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, GPIO_NUM_25);
&lt;&#x2F;span&gt;&lt;span&gt;    } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GPIO:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, GPIO_NUM_26);
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#ifdef&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SINE
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: SINE&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_TRIANGLE
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: TRIANGLE&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SAWTOOTH
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: SAWTOOTH&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#elif&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_WAVEFORM_SQUARE
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Waveform: SQUARE&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#endif
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Frequency(Hz): &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, FREQ);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Output points num: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, OUTPUT_POINT_NUM);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;app_main&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;void&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    g_index = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    gptimer_handle_t gptimer = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    gptimer_config_t timer_config = {
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;clk_src &lt;&#x2F;span&gt;&lt;span&gt;= GPTIMER_CLK_SRC_APB,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;direction &lt;&#x2F;span&gt;&lt;span&gt;= GPTIMER_COUNT_UP,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;resolution_hz &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1000000&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; 1MHz, 1 tick = 1us
&lt;&#x2F;span&gt;&lt;span&gt;    };
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gptimer_new_timer&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;timer_config, &amp;amp;gptimer));
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dac_output_enable&lt;&#x2F;span&gt;&lt;span&gt;(DAC_CHAN));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;log_info&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;prepare_data&lt;&#x2F;span&gt;&lt;span&gt;(OUTPUT_POINT_NUM);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    gptimer_alarm_config_t alarm_config = {
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;reload_count &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;alarm_count &lt;&#x2F;span&gt;&lt;span&gt;= TIMER_INTR_US,
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;flags&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;auto_reload_on_alarm &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    };
&lt;&#x2F;span&gt;&lt;span&gt;    gptimer_event_callbacks_t cbs = {
&lt;&#x2F;span&gt;&lt;span&gt;        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;on_alarm &lt;&#x2F;span&gt;&lt;span&gt;= on_timer_alarm_cb,
&lt;&#x2F;span&gt;&lt;span&gt;    };
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gptimer_register_event_callbacks&lt;&#x2F;span&gt;&lt;span&gt;(gptimer, &amp;amp;cbs, raw_val));
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gptimer_set_alarm_action&lt;&#x2F;span&gt;&lt;span&gt;(gptimer, &amp;amp;alarm_config));
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_ERROR_CHECK&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gptimer_start&lt;&#x2F;span&gt;&lt;span&gt;(gptimer));
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;vTaskDelay&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#if&lt;&#x2F;span&gt;&lt;span&gt; CONFIG_EXAMPLE_LOG_VOLTAGE
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(g_index &amp;lt; OUTPUT_POINT_NUM) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGI&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Output voltage(mV): &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, volt_val[g_index]);
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ESP_LOGD&lt;&#x2F;span&gt;&lt;span&gt;(TAG, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;g_index: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, g_index);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#endif
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ESP32</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/esp32/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/esp32/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;&#x2F;docs&#x2F;embedded-systems&#x2F;esp32-hardware-timer-interrupt&quot;&gt;ESP32 Hardware Timer Interrupt&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>FPGA Stuff</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/fpga-stuff/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/fpga-stuff/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.google.com&#x2F;search?q=linux+kernel+xilinx+driver&amp;amp;rlz=1C1GCEU_zh-HKSG926SG926&amp;amp;oq=linux+kernel+xilinx+driver&amp;amp;aqs=chrome..69i57j33i22i29i30.3542j0j1&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Sipeed M1W</title>
		<published>2022-08-02T02:41:06.379251+00:00</published>
		<updated>2022-08-02T02:41:06.379251+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/sipeed-m1w/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/sipeed-m1w/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;blog.csdn.net&#x2F;Argon_Ghost&#x2F;article&#x2F;details&#x2F;104581094&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>ResNet</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/deep-learning/resnet/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/deep-learning/resnet/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1512.03385.pdf&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;he convolutional layers mostly have 3×3 filters and follow two simple design rules: (i) for the same output feature map size, the layers have the same number of filters; and (ii) if the feature map size is halved, the number of filters is doubled so as to preserve the time complexity per layer&lt;&#x2F;li&gt;
&lt;li&gt;Deeper non-bottleneck ResNets (e.g., Fig. 5 left) also gain accuracy from increased depth (as shown on CIFAR-10), but are not as economical as the bottleneck ResNets. So the usage of bottleneck designs is mainly due to practical considerations. We further note that the degradation problem of plain nets is also witnessed for the bottleneck designs.
https:&#x2F;&#x2F;arxiv.org&#x2F;pdf&#x2F;1603.05027.pdf&lt;&#x2F;li&gt;
&lt;li&gt;As indicated by the grey arrows in Fig. 2, the shortcut connections are the most direct paths for the information to propagate. Multiplicative manipulations (scaling, gating, 1×1 convolutions, and dropout) on the shortcuts can hamper information propagation and lead to optimization problems.&lt;&#x2F;li&gt;
&lt;li&gt;In fact, the shortcut-only gating and 1×1 convolution cover the solution space of identity shortcuts (i.e., they could be optimized as identity shortcuts). However, their training error is higher than that of identity shortcuts, indicating that the degradation of these models is caused by optimization issues, instead of representational abilities.&lt;&#x2F;li&gt;
&lt;li&gt;The distinction between post-activation&#x2F;pre-activation is caused by the presence of the element-wise addition. For a plain network that has N layers, there are N − 1 activations (BN&#x2F;ReLU), and it does not matter whether we think of them as post- or pre-activations. But for branched layers merged by addition, the position of activation matters&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Embedded Linux</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/embedded-linux/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/embedded-linux/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;www.thirtythreeforty.net&#x2F;posts&#x2F;2019&#x2F;08&#x2F;mastering-embedded-linux-part-1-concepts&#x2F;
https:&#x2F;&#x2F;github.com&#x2F;xianxuhappy&#x2F;A33_M2&#x2F;blob&#x2F;master&#x2F;SCH&#x2F;A33_M2_SCH.pdf
https:&#x2F;&#x2F;www.onsemi.com&#x2F;products?documentNotFound=3&amp;amp;documentId=74606
https:&#x2F;&#x2F;www.onsemi.com&#x2F;products?documentNotFound=3&amp;amp;documentId=78557
https:&#x2F;&#x2F;www.micron.com&#x2F;support&#x2F;~&#x2F;media&#x2F;f9b2fb1d2b8c4efc8078247232e25b56.ashx
http:&#x2F;&#x2F;pengzhihui.xyz&#x2F;2018&#x2F;04&#x2F;08&#x2F;minipi&#x2F;
http:&#x2F;&#x2F;events17.linuxfoundation.org&#x2F;sites&#x2F;events&#x2F;files&#x2F;slides&#x2F;schulz-pmics-keep-power-in-your-hands.pdf&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>General PCB Design</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/general-pcb-design/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/general-pcb-design/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;Choosing Crystal Caps
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;blog.adafruit.com&#x2F;2012&#x2F;01&#x2F;24&#x2F;choosing-the-right-crystal-and-caps-for-your-design&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.eet-china.com&#x2F;mp&#x2F;a11092.html&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Why filtering caps not bigger better
&lt;ul&gt;
&lt;li&gt;Because of series inductance, so V-shaped Bode plot&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>High-Speed PCB Design</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/high-speed-pcb-design/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/high-speed-pcb-design/</id>
		<content type="html">&lt;h2 id=&quot;via-stitching-fencing&quot;&gt;Via Stitching &#x2F; Fencing&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;uniform-ground-potential&quot;&gt;Uniform Ground Potential&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Ground plane has resistance&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Vias (or ground pins) etc. helps to keep ground potential as uniform as possible under current flow.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;thermal-dissipation&quot;&gt;Thermal Dissipation&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Vias are much better heat dissipators than FR4.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;return-path&quot;&gt;Return Path&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Return currents follow path of least impedance.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;At low frequencies &#x2F; DC, return current is shortest path between trace start and end in ground plane (least resistance). At high frequencies, return current follows trace in reference plane (least inductance by minimizing loop area).
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;current-return-path.png&quot; alt=&quot;current_return_path.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;higher-current-flow&quot;&gt;Higher Current Flow&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Stitch multiple track layers to increase current capacity&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;perimeter-via-fencing&quot;&gt;Perimeter Via Fencing&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Faraday Cage (λ&#x2F;10 spacing)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Reduces received and emitted EM radiation. Do this together with the 3H copper pour pullback guideline.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crossing-layers&quot;&gt;Crossing Layers&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Ground via when changing reference plane&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Or else the return current will spread out in a nasty matter across the original reference plane to find the nearest via.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;electronics.stackexchange.com&#x2F;questions&#x2F;371559&#x2F;why-try-to-maximize-number-of-grounding-vias-in-rf-pcbs&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.emcs.org&#x2F;acstrial&#x2F;newsletters&#x2F;fall08&#x2F;tips.pdf&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;rushpcbinc.com&#x2F;what-is-via-stitching-and-why-it-is-useful&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.ndsu.edu&#x2F;pubweb&#x2F;~braaten&#x2F;EMC_2016_1.pdf&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;incompliancemag.com&#x2F;article&#x2F;alternative-paths-of-the-return-current&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=nPx2iqmVAHY&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=S6PNYKxJsdk&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;circuitdigest.com&#x2F;article&#x2F;here-is-why-you-should-use-via-stitching-for-your-next-pcb-design&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;routing-directions&quot;&gt;Routing Directions&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Goal: reduce cross talk&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Configure your board layers so that two adjacent signal layers will have preferred routing directions that cross each other instead of running parallel to each other. If layer two is running “north to south,” then make sure that layer three is running “east to west.” In this way you can minimize the possibility of broadside coupling.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other&quot;&gt;Other&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Avoid return path discontinuity (i.e. ensure full ground polygon adjacent to high speed traces)&lt;&#x2F;li&gt;
&lt;li&gt;Impedance Matching (simple transmisson line stuff, reduce loss)&lt;&#x2F;li&gt;
&lt;li&gt;Termination (reduce reflection)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;concepts&quot;&gt;Concepts&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Every circuit is a loop (hence inductance), capacitance comes from dielectric&lt;&#x2F;li&gt;
&lt;li&gt;Conductors carry current, non-conductors carry EM waves&lt;&#x2F;li&gt;
&lt;li&gt;Multiple decoupling capacitors are needed because of inductance (so they block different frequencies as that are not just a simple RC)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;to-read&quot;&gt;To-Read&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.protoexpress.com&#x2F;blog&#x2F;effects-high-speed-signals-pcb-design&#x2F;&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.microwavejournal.com&#x2F;blogs&#x2F;1-rog-blog&#x2F;post&#x2F;24374-comparing-microstrip-and-grounded-coplanar-waveguide&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.electronics-notes.com&#x2F;articles&#x2F;basic_concepts&#x2F;inductance&#x2F;inductance-of-straight-wire-coils.php&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>PCB Manufacturing</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/embedded-systems/pcb-manufacturing/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/embedded-systems/pcb-manufacturing/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;m.jlc.com&#x2F;portal&#x2F;server_guide_70.html&quot;&gt;JLCPCB Castellated Holes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Linear Algebra</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/maths/linear-algebra/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/maths/linear-algebra/</id>
		<content type="html">&lt;p&gt;cOOrdinate space of 2 dim is same as system of equations with two unknowns&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Best Notes
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;terrytao.files.wordpress.com&#x2F;2016&#x2F;12&#x2F;linear-algebra-notes.pdf&quot;&gt;Terrence Tao Maths 115A&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tducvu&#x2F;LectureNotes&quot;&gt;Other UCLA Linear Algebra Notes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.math.pku.edu.cn&#x2F;teachers&#x2F;anjp&#x2F;textbook.pdf&quot;&gt;Textbook&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;PCA nice links:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;http:&#x2F;&#x2F;mlsp.cs.cmu.edu&#x2F;courses&#x2F;fall2014&#x2F;lectures&#x2F;extra&#x2F;pca.pdf&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Multiobjective Optimization</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/maths/multiobjective-optimization/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/maths/multiobjective-optimization/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Multi-objective_optimization&quot;&gt;Wiki is Good&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Statistics</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/maths/statistics/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/maths/statistics/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;stefan-stein.github.io&#x2F;posts&#x2F;2020-03-07-concentration-properties-of-high-dimensional-normal-distributions&#x2F;&quot;&gt;High dimensional normal distribution is in a sphere&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=eN0wFzBA4Sc&quot;&gt;UMAP Visualization&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Electromagnetism</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/misc/electromagnetism/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/misc/electromagnetism/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.wtamu.edu&#x2F;%7Ecbaird&#x2F;SuppMaxwellUniqueness.pdf&quot;&gt;Uniqueness of Maxwell Equations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>MiniDelta Tuning</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/misc/minidelta-tuning/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/misc/minidelta-tuning/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;clips cannot be too inside&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Renovation Nonos</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/misc/renovation-nonos/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/misc/renovation-nonos/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;No sliding windows: rail collects dust&lt;&#x2F;li&gt;
&lt;li&gt;No non-built-in wardrobes: top collects dust, empty spaces beside and behind are hard to clean&lt;&#x2F;li&gt;
&lt;li&gt;Ceiling fans over dyson standing fan (but no warm air sad)&lt;&#x2F;li&gt;
&lt;li&gt;No bed with stand and gap with floor: hard to clean&lt;&#x2F;li&gt;
&lt;li&gt;No wooden floor, cracks are just disgusting&lt;&#x2F;li&gt;
&lt;li&gt;No exposed wiring&lt;&#x2F;li&gt;
&lt;li&gt;No carpets, why would a normal person want one... hygiene disaster&lt;&#x2F;li&gt;
&lt;li&gt;No artificial plants: dust collectors&lt;&#x2F;li&gt;
&lt;li&gt;Every surface is a dust collector&lt;&#x2F;li&gt;
&lt;li&gt;No sink on tabletop, do sink-in&lt;&#x2F;li&gt;
&lt;li&gt;Kitchen sink round corners, square corners har dto clean&lt;&#x2F;li&gt;
&lt;li&gt;Power tracks only when you need flexibility (e.g. not for TV stand etc.)&lt;&#x2F;li&gt;
&lt;li&gt;use curtains or roll-down type, not blinds&lt;&#x2F;li&gt;
&lt;li&gt;Closed storage better than open&lt;&#x2F;li&gt;
&lt;li&gt;orbo exhaust hood looks cool&lt;&#x2F;li&gt;
&lt;li&gt;look at aiken&#x27;s dish rack&lt;&#x2F;li&gt;
&lt;li&gt;ryan&#x27;s samsung aircon&lt;&#x2F;li&gt;
&lt;li&gt;vinyl flooring?&lt;&#x2F;li&gt;
&lt;li&gt;autodose washing machine?&lt;&#x2F;li&gt;
&lt;li&gt;laundry rack must have&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Electromagnetism</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/miscellaneous/electromagnetism/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/miscellaneous/electromagnetism/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.wtamu.edu&#x2F;%7Ecbaird&#x2F;SuppMaxwellUniqueness.pdf&quot;&gt;Uniqueness of Maxwell Equations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Linux Tricks</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/miscellaneous/linux-tricks/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/miscellaneous/linux-tricks/</id>
		<content type="html">&lt;h1 id=&quot;connect-to-wifi-from-terminal&quot;&gt;Connect to Wifi from Terminal&lt;&#x2F;h1&gt;
&lt;p&gt;https:&#x2F;&#x2F;www.linuxfordevices.com&#x2F;tutorials&#x2F;ubuntu&#x2F;connect-wifi-terminal-command-line&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ip a&lt;&#x2F;code&gt; or &lt;code&gt;iwconfig&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;sudo ifconfig wlan0 up&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;nmcli dev status&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;nmcli dev wifi list&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;sudo&lt;&#x2F;code&gt; &lt;code&gt;nmcli --ask dev wifi connect &amp;lt;SSID&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h1 id=&quot;fzf-productivity&quot;&gt;FZF Productivity&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;vim&quot;&gt;Vim&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;vscode-vim&quot;&gt;VSCode Vim&lt;&#x2F;h1&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Microsoft Office Tricks</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/miscellaneous/microsoft-office-tricks/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/miscellaneous/microsoft-office-tricks/</id>
		<content type="html">&lt;h1 id=&quot;word&quot;&gt;Word&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;qualityandinnovation.com&#x2F;2014&#x2F;11&#x2F;22&#x2F;typing-x-bar-y-bar-p-hat-q-hat-and-all-that&#x2F;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Renovation Nonos</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/miscellaneous/renovation-nonos/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/miscellaneous/renovation-nonos/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;No sliding windows: rail collects dust&lt;&#x2F;li&gt;
&lt;li&gt;No non-built-in wardrobes: top collects dust, empty spaces beside and behind are hard to clean&lt;&#x2F;li&gt;
&lt;li&gt;Ceiling fans over dyson standing fan (but no warm air sad)&lt;&#x2F;li&gt;
&lt;li&gt;No bed with stand and gap with floor: hard to clean&lt;&#x2F;li&gt;
&lt;li&gt;No wooden floor, cracks are just disgusting&lt;&#x2F;li&gt;
&lt;li&gt;No exposed wiring&lt;&#x2F;li&gt;
&lt;li&gt;No carpets, why would a normal person want one... hygiene disaster&lt;&#x2F;li&gt;
&lt;li&gt;No artificial plants: dust collectors&lt;&#x2F;li&gt;
&lt;li&gt;Every surface is a dust collector&lt;&#x2F;li&gt;
&lt;li&gt;No sink on tabletop, do sink-in&lt;&#x2F;li&gt;
&lt;li&gt;Kitchen sink round corners, square corners har dto clean&lt;&#x2F;li&gt;
&lt;li&gt;Power tracks only when you need flexibility (e.g. not for TV stand etc.)&lt;&#x2F;li&gt;
&lt;li&gt;use curtains or roll-down type, not blinds&lt;&#x2F;li&gt;
&lt;li&gt;Closed storage better than open&lt;&#x2F;li&gt;
&lt;li&gt;orbo exhaust hood looks cool&lt;&#x2F;li&gt;
&lt;li&gt;look at aiken&#x27;s dish rack&lt;&#x2F;li&gt;
&lt;li&gt;ryan&#x27;s samsung aircon&lt;&#x2F;li&gt;
&lt;li&gt;vinyl flooring?&lt;&#x2F;li&gt;
&lt;li&gt;autodose washing machine?&lt;&#x2F;li&gt;
&lt;li&gt;laundry rack must have&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Line Breaks</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/line-breaks/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/line-breaks/</id>
		<content type="html">&lt;p&gt;line1
line2&lt;&#x2F;p&gt;
&lt;p&gt;line4&lt;&#x2F;p&gt;
&lt;p&gt;$$
\begin{align}
m_t &amp;amp;= \beta_1m_{t-1} + (1-\beta_1)g_t \\v_t &amp;amp;= \beta_2v_{t-1} + (1-\beta_2)g_t^2
\end{align}
$$&lt;&#x2F;p&gt;
&lt;p&gt;Talking something then starting a LaTEX block $$
\begin{align}
m_t &amp;amp;= \beta_1m_{t-1} + (1-\beta_1)g_t \\v_t &amp;amp;= \beta_2v_{t-1} + (1-\beta_2)g_t^2
\end{align}
$$&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Repeat Name</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/repeat-name-nested/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/repeat-name-nested/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Nested</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/repeat-name/nested/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/repeat-name/nested/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Weird_@Filename_% $^}{+=-_~`&amp;()!&#x27;</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/weird-filename/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/obsidian-zola-tests/weird-filename/</id>
		<content type="html">&lt;h2 id=&quot;weird-filename&quot;&gt;Weird Filename&lt;&#x2F;h2&gt;
&lt;p&gt;Let&#x27;s see if it works&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Bresenham&#x27;s Line Algorithm</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/bresenham-s-line-algorithm/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/bresenham-s-line-algorithm/</id>
		<content type="html">&lt;p&gt;(also what&#x27;s used by GRBL to avoid floating point calculations in straight line interpolation)
https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Bresenham%27s_line_algorithm&lt;&#x2F;p&gt;
&lt;h2 id=&quot;slope-1&quot;&gt;|Slope| &amp;lt;= 1&lt;&#x2F;h2&gt;
&lt;p&gt;Goal: draw a straight line pixel-by-pixel from &lt;code&gt;(x0, y0)&lt;&#x2F;code&gt; to &lt;code&gt;(x1, y1)&lt;&#x2F;code&gt; where slope &amp;lt;= 1. The ideal line is:&lt;&#x2F;p&gt;
&lt;p&gt;$$y = \frac{y_1-y_0}{x_1-x_0}(x-x_0)+y_0$$
$$f(x, y) = 0 = (\Delta y)x - (\Delta x)y + (\Delta x)y_0 - (\Delta y)x_0$$&lt;&#x2F;p&gt;
&lt;p&gt;Of course, since we can only increment &lt;code&gt;x&lt;&#x2F;code&gt; and &lt;code&gt;y&lt;&#x2F;code&gt; by interger values, we can&#x27;t fit the ideal line. When slope &amp;lt;= 1, each time we increment &lt;code&gt;x&lt;&#x2F;code&gt; by 1, we decide whether we increment &lt;code&gt;y&lt;&#x2F;code&gt; by 1 depending on:
$$D=f(x_0+1, y_0 + 0.5) - f(x_0$$&lt;&#x2F;p&gt;
&lt;p&gt;Step 1: determine which axis to increment&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;dx = x1 - x0
&lt;&#x2F;span&gt;&lt;span&gt;dy = y1 - y0
&lt;&#x2F;span&gt;&lt;span&gt;xsign = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;dx &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;ysign = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;dy &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;dx = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;abs&lt;&#x2F;span&gt;&lt;span&gt;(dx)
&lt;&#x2F;span&gt;&lt;span&gt;dy = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;abs&lt;&#x2F;span&gt;&lt;span&gt;(dy)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;dx &amp;gt; dy:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# increment x
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# increment y
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;$$f(x,y) = (\Delta y)x - (\Delta x)y + (\Delta x)b$$&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Docker Stuff</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/docker-stuff/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/docker-stuff/</id>
		<content type="html">&lt;h3 id=&quot;to-read-try&quot;&gt;To Read &#x2F; Try&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;packages&#x2F;working-with-a-github-packages-registry&#x2F;working-with-the-container-registry&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;buildx&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;marketplace&#x2F;actions&#x2F;build-and-push-docker-images&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Git Stuff</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/git-stuff/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/git-stuff/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;conatiner registry&lt;&#x2F;li&gt;
&lt;li&gt;delete remote tag&lt;&#x2F;li&gt;
&lt;li&gt;github actions&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Nice Fonts</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/nice-fonts/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/nice-fonts/</id>
		<content type="html">&lt;ul&gt;
&lt;li&gt;Fantasque&lt;&#x2F;li&gt;
&lt;li&gt;Cascadia Code&lt;&#x2F;li&gt;
&lt;li&gt;Fira Code&lt;&#x2F;li&gt;
&lt;li&gt;Inter&lt;&#x2F;li&gt;
&lt;li&gt;Input&lt;&#x2F;li&gt;
&lt;li&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>RegEx Cheatsheet</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/regex-cheatsheet/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/regex-cheatsheet/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Guide&#x2F;Regular_Expressions&#x2F;Cheatsheet&quot;&gt;Reference&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;p&gt;RegEx patterns are made up of characters, groups and ranges:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Characters&lt;&#x2F;strong&gt;: match a single character&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Group&lt;&#x2F;strong&gt;: match all chracters in group (AND)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Range&lt;&#x2F;strong&gt;: match any character in range (OR)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;characters&quot;&gt;Characters&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;RegEx&lt;&#x2F;th&gt;&lt;th&gt;Meaning&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;.&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Anything except &lt;code&gt;\n&lt;&#x2F;code&gt;, &lt;code&gt;\r&lt;&#x2F;code&gt;. Means literal dot in &lt;code&gt;[]&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\d&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Digit&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\D&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Not digit&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\s&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Whitespace (tab, space, newline, etc.)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\S&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Not whitespace&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\w&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;[A-Za-z0-9_]&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\W&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;[^A-Za-z0-9_]&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\t&lt;&#x2F;code&gt;, &lt;code&gt;\r&lt;&#x2F;code&gt;, &lt;code&gt;\n&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Normal meanings&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;$&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;end of string&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;^&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;start of string&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;quantifiers&quot;&gt;Quantifiers&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;RegEx&lt;&#x2F;th&gt;&lt;th&gt;Meaning&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x?&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;0 or 1 time&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x{a,b}&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;x&lt;&#x2F;code&gt; between &lt;code&gt;a&lt;&#x2F;code&gt; and &lt;code&gt;b&lt;&#x2F;code&gt; times (inclusive)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x+&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;1 or more&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x*&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;0 or more&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x&amp;lt;quantifier&amp;gt;?&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Non-greedy match (as little string as possible)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;$&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;end of string&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;lookahead-lookbehind&quot;&gt;Lookahead &#x2F; Lookbehind&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;RegEx&lt;&#x2F;th&gt;&lt;th&gt;Meaning&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x(?=y)&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;match x if x is followed by y&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x(?!y)&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;match x if x is not followed by y&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x(?&amp;lt;=y)&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;match x if x is preceded by y&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x(?&amp;lt;!y)&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;match x if x is not preceded by y&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;groups-and-ranges&quot;&gt;Groups and Ranges&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;RegEx&lt;&#x2F;th&gt;&lt;th&gt;Meaning&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;x|y&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;x or y (default global group, use inside group &#x2F; range)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;[&amp;lt;characters&amp;gt;]&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;match any enclosed character&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;[^&amp;lt;characters&amp;gt;]&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;match any non-enclosed character&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;(x)&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;capturing group, use via &lt;code&gt;$1, ..., $9&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;\n&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;backreference to group &lt;code&gt;n&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;(?:x)&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;non-capturing group&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;See &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;49809122&#x2F;vertical-bar-symbol-within-a-markdown-table&quot;&gt;here&lt;&#x2F;a&gt; on how to display &lt;code&gt;|&lt;&#x2F;code&gt; inside a Markdown table.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust Tips</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/rust-tips/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/rust-tips/</id>
		<content type="html">&lt;h2 id=&quot;cargo-errors&quot;&gt;Cargo Errors&lt;&#x2F;h2&gt;
&lt;p&gt;If you face &amp;quot;failed to run custom build command for &lt;code&gt;openssl-sys v0.9.72&lt;&#x2F;code&gt;&amp;quot;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install libssl-dev pkg-config
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Windows + WSL Programmer&#x27;s Setup</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/programming/windows-wsl-programmer-s-setup/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/programming/windows-wsl-programmer-s-setup/</id>
		<content type="html">&lt;h2 id=&quot;wsl&quot;&gt;WSL&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;forwarding-com-port-usb&quot;&gt;Forwarding COM Port &#x2F; USB&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Method&lt;&#x2F;strong&gt;
https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;commandline&#x2F;connecting-usb-devices-to-wsl&#x2F;
&lt;strong&gt;Powershell Setup&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-powershell &quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Run code $profile in powershell and add these lines
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;ListUSB &lt;&#x2F;span&gt;&lt;span&gt;{ usbipd wsl list }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;New-Alias &lt;&#x2F;span&gt;&lt;span&gt;-Name lsusb -Value ListUSB
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;AttachUSB &lt;&#x2F;span&gt;&lt;span&gt;{ usbipd wsl attach -b $args[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;New-Alias &lt;&#x2F;span&gt;&lt;span&gt;-Name attach -Value AttachUSB
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;DetachUSB &lt;&#x2F;span&gt;&lt;span&gt;{ usbipd wsl detach -b $args[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;New-Alias &lt;&#x2F;span&gt;&lt;span&gt;-Name detach -Value DetachUSB
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;esp-idf-in-vscode-wsl&quot;&gt;ESP-IDF in VSCode WSL&lt;&#x2F;h3&gt;
&lt;p&gt;https:&#x2F;&#x2F;github.com&#x2F;espressif&#x2F;vscode-esp-idf-extension&#x2F;blob&#x2F;master&#x2F;docs&#x2F;WSL.md&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Project Inspirations</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/tinkering/project-inspirations/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/tinkering/project-inspirations/</id>
		<content type="html">&lt;p&gt;https:&#x2F;&#x2F;www.instructables.com&#x2F;Localino-Open-Source-Indoor-Location-System-Arduin&#x2F;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Analog Electronics</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/university/analog-electronics/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/university/analog-electronics/</id>
		<content type="html">&lt;p&gt;I am not interested in AE but this looks cool
https:&#x2F;&#x2F;lnkd.in&#x2F;eczBUqft&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>FYP Plan (Trying To Break Things)````</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/university/fyp-plan-trying-to-break-things/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/university/fyp-plan-trying-to-break-things/</id>
		<content type="html">&lt;h2 id=&quot;methodology&quot;&gt;Methodology&lt;&#x2F;h2&gt;
&lt;p&gt;Currently, stage 1 StyleGAN is trained using the CheXpert dataset. This dataset consists of around 200k chest X-rays consisting of 14 different labels:
&lt;img src=&quot;&#x2F;docs&#x2F;attachments&#x2F;chexpert-labels.png&quot; alt=&quot;chexpert_labels.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To verify that stage 2 works, we have to ensure that:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Stage 1 StyleGAN is &lt;strong&gt;capable&lt;&#x2F;strong&gt; of generating CXR images with the intended pathology&lt;&#x2F;li&gt;
&lt;li&gt;Find CT scans with the desired pathology and check that generated CXR actually contains the pathology (or even more details)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;More details on each pathology:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enlarged Cardiom&lt;&#x2F;strong&gt;: not sure, to find out&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Cardiomegaly&lt;&#x2F;strong&gt;: Enlarged heart. Can diagnose in CXR&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Lung Lesion, Lung Opactiy, Edema, Consolidation&lt;&#x2F;strong&gt;: generic observations, not very valuable, need CT scan to diagnose more specific conditions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Pneumonia&lt;&#x2F;strong&gt;: Pneumonia, not very certain in CXR&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Atelectasis&lt;&#x2F;strong&gt;: Lung collapse, not too sure in CXR&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Pneumothorax&lt;&#x2F;strong&gt;: Leaky lung, quite certain in CXR&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So the plan is:
&lt;strong&gt;Stage 1 StyleGAN Training&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Select subset of CheXpert &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Ideas:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;StyleGAN increase higher resolution channels, reduce lower resolution channel&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;docs&#x2F;embedded-systems&#x2F;esp32-c3#documents&quot;&gt;ESP32-C3 &amp;gt; Documents&lt;&#x2F;a&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;hit.yhype.me&#x2F;github&#x2F;profile?user_id=8547778&quot; alt=&quot;&quot; &#x2F;&gt;
https:&#x2F;&#x2F;github.com&#x2F;rvignav&#x2F;CT2Xray&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>SEO</title>
		<published>2022-08-02T02:41:06.375252+00:00</published>
		<updated>2022-08-02T02:41:06.375252+00:00</updated>
		<link href="https://obsidian-zola.trwbox.com/docs/website-development/seo/" type="text/html"/>
		<id>https://obsidian-zola.trwbox.com/docs/website-development/seo/</id>
		<content type="html">&lt;h2 id=&quot;optimizing-google-search&quot;&gt;Optimizing Google Search&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;search.google.com&#x2F;test&#x2F;rich-results&quot;&gt;Rich Text Search&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;validator.schema.org&#x2F;&quot;&gt;Schema Validation&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developers.google.com&#x2F;search&#x2F;docs&#x2F;advanced&#x2F;structured-data&#x2F;breadcrumb&quot;&gt;Breadcrumb List&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;netlify-plugin-submit-sitemap&quot;&gt;Netlify Submit Sitemap&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;search.google.com&#x2F;search-console&#x2F;about&quot;&gt;Google Search Console&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;https:&#x2F;&#x2F;support.google.com&#x2F;webmasters&#x2F;thread&#x2F;3127483&#x2F;cannot-perform-url-inspection?hl=en&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
